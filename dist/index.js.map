{"mappings":"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","sources":["lib/helpers.ts","node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/dist/solid.js","node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/web/dist/web.js","node_modules/.pnpm/solid-simple-table@0.2.6/node_modules/solid-simple-table/dist/SimpleTable.module.js","lib/panel/component.tsx","lib/panel/dock.tsx","lib/status-bar/helpers.ts","lib/tooltip/message.tsx","node_modules/.pnpm/atom-ide-base@3.1.1/node_modules/atom-ide-base/src-commons-ui/float-pane/selectable-overlay.ts","lib/tooltip/index.tsx","node_modules/.pnpm/atom-ide-base@3.1.1/node_modules/atom-ide-base/src-commons-atom/editor-largeness.ts","lib/tree-view/index.ts","lib/index.ts","lib/panel/delegate.ts","lib/panel/index.ts","lib/commands.ts","lib/status-bar/element.ts","lib/status-bar/index.ts","lib/busy-signal.ts","lib/intentions.ts","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_freeGlobal.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/now.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_trimmedEndIndex.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseTrim.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getRawTag.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Symbol.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_objectToString.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetTag.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObjectLike.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isSymbol.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toNumber.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/debounce.js","lib/tooltip/delegate.ts","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toFinite.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toInteger.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/before.js","node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/once.js","node_modules/.pnpm/@parcel+runtime-js@2.0.0-nightly.731/node_modules/@parcel/runtime-js/lib/runtime-fc48169aba665b47.js","lib/editor/index.ts","lib/editor/helpers.ts","lib/editors.ts","lib/tree-view/helpers.ts","lib/main.ts"],"sourcesContent":["import { Range } from 'atom';\nimport type { Point, PointLike, RangeCompatible, TextEditor, WorkspaceOpenOptions } from 'atom';\nimport { shell } from 'electron';\nimport type { default as Editors, EditorsMap } from './editors';\nimport type { LinterMessage, MessageSolution, TextEditorExtra } from './types';\nlet lastPaneItem: TextEditorExtra | null = null;\nexport const severityScore = {\n  error: 3,\n  warning: 2,\n  info: 1\n};\nexport const severityNames = {\n  error: 'Error',\n  warning: 'Warning',\n  info: 'Info'\n};\nexport const WORKSPACE_URI = 'atom://linter-ui-default';\nexport const DOCK_ALLOWED_LOCATIONS = ['center', 'bottom'];\nexport const DOCK_DEFAULT_LOCATION = 'bottom';\nexport function $range(message: LinterMessage): Range | null | undefined {\n  return message.location.position;\n}\nexport function $file(message: LinterMessage): string | null | undefined {\n  return message.location.file;\n}\nexport function copySelection() {\n  const selection = getSelection();\n\n  if (selection) {\n    atom.clipboard.write(selection.toString());\n  }\n}\nexport function getPathOfMessage(message: LinterMessage): string {\n  return atom.project.relativizePath($file(message) ?? '')[1];\n}\nexport function getActiveTextEditor(): TextEditor | null {\n  let paneItem = (atom.workspace.getCenter().getActivePaneItem() as TextEditorExtra | null);\n  const paneIsTextEditor = paneItem !== null ? atom.workspace.isTextEditor(paneItem) : false;\n\n  if (!paneIsTextEditor && paneItem && lastPaneItem && paneItem.getURI && paneItem.getURI() === WORKSPACE_URI && (!lastPaneItem.isAlive || lastPaneItem.isAlive())) {\n    paneItem = lastPaneItem;\n  } else {\n    lastPaneItem = paneItem;\n  }\n\n  return paneIsTextEditor ? paneItem : null;\n}\nexport function getEditorsMap(editors: Editors): {\n  editorsMap: EditorsMap;\n  filePaths: Array<string>;\n} {\n  // TODO types\n  const editorsMap: EditorsMap = new Map();\n  const filePaths: string[] = [];\n\n  for (const entry of editors.editors) {\n    const filePath = entry.textEditor.getPath() ?? ''; // if undefined save it as \"\"\n\n    if (editorsMap.has(filePath)) {\n      editorsMap.get(filePath)!.editors.push(entry);\n    } else {\n      editorsMap.set(filePath, {\n        added: [],\n        removed: [],\n        editors: [entry]\n      });\n      filePaths.push(filePath);\n    }\n  }\n\n  return {\n    editorsMap,\n    filePaths\n  };\n}\nexport function filterMessages(messages: Array<LinterMessage>, filePath: string | null | undefined, severity: string | null | undefined = null): Array<LinterMessage> {\n  const filtered: Array<LinterMessage> = [];\n  messages.forEach(function (message) {\n    if (!message || !message.location) {\n      return;\n    }\n\n    if ((!filePath || $file(message) === filePath) && (!severity || message.severity === severity)) {\n      filtered.push(message);\n    }\n  });\n  return filtered;\n}\nexport function filterMessagesByRangeOrPoint(messages: Set<LinterMessage> | Array<LinterMessage> | Map<string, LinterMessage>, filePath: string | undefined, rangeOrPoint: Point | RangeCompatible): Array<LinterMessage> {\n  const filtered: Array<LinterMessage> = [];\n  const expectedRange = rangeOrPoint.constructor.name === 'Point' ? new Range((rangeOrPoint as Point), (rangeOrPoint as Point)) : Range.fromObject((rangeOrPoint as RangeCompatible));\n  messages.forEach(function (message: LinterMessage) {\n    const file = $file(message);\n    const range = $range(message);\n\n    if (typeof file === 'string' && range && file === filePath && typeof range.intersectsWith === 'function' && range.intersectsWith(expectedRange)) {\n      filtered.push(message);\n    }\n  });\n  return filtered;\n}\nexport async function openFile(file: string, position: PointLike | null | undefined) {\n  const options: WorkspaceOpenOptions = {\n    searchAllPanes: true\n  };\n\n  if (position) {\n    options.initialLine = position.row;\n    options.initialColumn = position.column;\n  }\n\n  await atom.workspace.open(file, options);\n}\nexport async function visitMessage(message: LinterMessage, reference = false) {\n  let messageFile: string | undefined | null;\n  let messagePosition: Point | undefined;\n\n  if (reference) {\n    if (!message.reference || !message.reference.file) {\n      console.warn('[Linter-UI-Default] Message does not have a valid reference. Ignoring');\n      return;\n    }\n\n    messageFile = message.reference.file;\n    messagePosition = message.reference.position;\n  } else {\n    const messageRange = $range(message);\n    messageFile = $file(message);\n\n    if (messageRange) {\n      messagePosition = messageRange.start;\n    }\n  }\n\n  if (typeof messageFile === 'string') {\n    await openFile(messageFile, messagePosition);\n  }\n}\nexport function openExternally(message: LinterMessage) {\n  if (message.version === 2 && message.url !== undefined) {\n    shell.openExternal(message.url);\n  }\n}\nexport function sortMessages(rows: Array<LinterMessage>, sortDirection: [id: 'severity' | 'linterName' | 'file' | 'line', direction: 'asc' | 'desc']): Array<LinterMessage> {\n  const sortDirectionID = sortDirection[0];\n  const sortDirectionDirection = sortDirection[1];\n  const multiplyWith = sortDirectionDirection === 'asc' ? 1 : -1;\n  return rows.sort(function (a, b) {\n    if (sortDirectionID === 'severity') {\n      const severityA = severityScore[a.severity];\n      const severityB = severityScore[b.severity];\n\n      if (severityA !== severityB) {\n        return multiplyWith * (severityA > severityB ? 1 : -1);\n      }\n    }\n\n    if (sortDirectionID === 'linterName') {\n      const sortValue = a.severity.localeCompare(b.severity);\n\n      if (sortValue !== 0) {\n        return multiplyWith * sortValue;\n      }\n    }\n\n    if (sortDirectionID === 'file') {\n      const fileA = getPathOfMessage(a);\n      const fileALength = fileA.length;\n      const fileB = getPathOfMessage(b);\n      const fileBLength = fileB.length;\n\n      if (fileALength !== fileBLength) {\n        return multiplyWith * (fileALength > fileBLength ? 1 : -1);\n      } else if (fileA !== fileB) {\n        return multiplyWith * fileA.localeCompare(fileB);\n      }\n    }\n\n    if (sortDirectionID === 'line') {\n      const rangeA = $range(a);\n      const rangeB = $range(b);\n\n      if (rangeA && !rangeB) {\n        return 1;\n      } else if (rangeB && !rangeA) {\n        return -1;\n      } else if (rangeA && rangeB) {\n        if (rangeA.start.row !== rangeB.start.row) {\n          return multiplyWith * (rangeA.start.row > rangeB.start.row ? 1 : -1);\n        }\n\n        if (rangeA.start.column !== rangeB.start.column) {\n          return multiplyWith * (rangeA.start.column > rangeB.start.column ? 1 : -1);\n        }\n      }\n    }\n\n    return 0;\n  });\n}\nexport function sortSolutions(solutions: MessageSolution[]) {\n  return solutions.sort(function (a, b) {\n    if (a.priority === undefined || b.priority === undefined) {\n      return 0;\n    }\n\n    return b.priority - a.priority;\n  });\n}\nexport function applySolution(textEditor: TextEditor, solution: MessageSolution): boolean {\n  if ('apply' in solution) {\n    solution.apply();\n    return true;\n  }\n\n  const range = solution.position;\n  const replaceWith = solution.replaceWith;\n\n  if ('currentText' in solution) {\n    const currentText = solution.currentText;\n    const textInRange = textEditor.getTextInBufferRange(range);\n\n    if (currentText !== textInRange) {\n      console.warn('[linter-ui-default] Not applying fix because text did not match the expected one', 'expected', currentText, 'but got', textInRange);\n      return false;\n    }\n  }\n\n  textEditor.setTextInBufferRange(range, replaceWith);\n  return true;\n}\n/**\r\n * A function to get a value from the cache or calculate it if it is not available (and store it in the cache after calculation)\r\n *\r\n * @param map A reference to a Map of key to values that is used as the cache\r\n * @param key The current key to get calculate or get the cache for\r\n * @param calculate The function that is used to calculate the value if the cache is not hit\r\n */\n\nexport function get<Key, Value>(map: Map<Key, Value>, key: Key, calculate: () => Value | null): Value | null {\n  // get cache\n  const cachedValue = map.get(key);\n\n  if (cachedValue !== undefined) {\n    // cache hit\n    return cachedValue;\n  } else {\n    // calculate\n    const calculatedValue = calculate();\n\n    if (calculatedValue !== null) {\n      // calculation successful\n      map.set(key, calculatedValue);\n    }\n\n    return calculatedValue;\n  }\n}","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      let k = n + m >> 1;\n      let cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}.`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = createSignal(false);\nvar Owner = null;\nvar Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet Transition = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  detachedOwner && (Owner = detachedOwner);\n  const listener = Listener,\n        owner = Owner,\n        root = fn.length === 0 && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner,\n    attached: !!detachedOwner\n  };\n  Owner = root;\n  Listener = null;\n  let result;\n  try {\n    runUpdates(() => result = fn(() => cleanNode(root)), true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  return result;\n}\nfunction createSignal(value, areEqual = true, options) {\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined\n  };\n  return [readSignal.bind(s), writeSignal.bind(s)];\n}\nfunction createComputed(fn, value) {\n  updateComputation(createComputation(fn, value, true));\n}\nfunction createRenderEffect(fn, value) {\n  updateComputation(createComputation(fn, value, false));\n}\nfunction createEffect(fn, value) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects && Effects.push(c);\n}\nfunction resumeEffects(e) {\n  Transition && (Transition.running = true);\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createMemo(fn, value, areEqual = true) {\n  const c = createComputation(fn, value, true);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.state = 0;\n  c.comparator = areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined;\n  updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const [deferred, setDeferred] = createSignal();\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  updateComputation(node);\n  setDeferred(node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn) {\n  let subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) || p !== undefined && fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.size > 1 ? l.delete(listener) : subs.delete(key);\n      });\n    }\n    return fn(key, node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  const q = Pending = [],\n        result = fn();\n  Pending = null;\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal.call(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction useTransition() {\n  return [transPending, (fn, cb) => {\n    if (SuspenseContext) {\n      Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        running: true,\n        cb: []\n      });\n      cb && Transition.cb.push(cb);\n      Transition.running = true;\n    }\n    batch(fn);\n    if (!SuspenseContext && cb) cb();\n  }];\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(...args) {\n  const fn = args.pop();\n  let deps;\n  let isArray = true;\n  let prev;\n  if (args.length < 2) {\n    deps = args[0];\n    isArray = false;\n  } else deps = args;\n  return prevResult => {\n    let value;\n    if (isArray) {\n      value = [];\n      if (!prev) prev = [];\n      for (let i = 0; i < deps.length; i++) value.push(deps[i]());\n    } else value = deps();\n    const result = untrack(() => fn(value, prev, prevResult));\n    prev = value;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return fn();\n  } finally {\n    Owner = prev;\n  }\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  return lookup(Owner, context.id) || context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction createResource(fn, fetcher, options = {}) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = fn;\n      fn = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = fn;\n    fn = true;\n  }\n  const contexts = new Set(),\n        [s, set] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, false),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      dynamic = typeof fn === \"function\";\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.context.loadResource) {\n      initP = sharedConfig.context.loadResource(id);\n    } else if (sharedConfig.resources && id && id in sharedConfig.resources) {\n      initP = sharedConfig.resources[id];\n      delete sharedConfig.resources[id];\n    }\n  }\n  function loadEnd(p, v, e) {\n    if (pr === p) {\n      setError(err = e);\n      pr = null;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      set(v);\n      setLoading(false);\n      for (let c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = s();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load() {\n    setError(err = undefined);\n    let lookup = dynamic ? fn() : fn;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(s));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || fetcher(lookup, s);\n    initP = null;\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return;\n    }\n    pr = p;\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    p.then(v => loadEnd(p, v), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    }\n  });\n  if (dynamic) createComputed(load);else load();\n  return [read, {\n    refetch: load,\n    mutate: set\n  }];\n}\nfunction readSignal() {\n  if (this.state && this.sources) {\n    const updates = Updates;\n    Updates = null;\n    this.state === STALE ? updateComputation(this) : lookDownstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (Transition && Transition.running && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(value, isComp) {\n  if (this.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(this)) {\n      if (this.comparator(this.tValue, value)) return value;\n    } else if (this.comparator(this.value, value)) return value;\n  }\n  if (Pending) {\n    if (this.pending === NOTPENDING) Pending.push(this);\n    this.pending = value;\n    return value;\n  }\n  if (Transition) {\n    if (Transition.running || !isComp && Transition.sources.has(this)) {\n      Transition.sources.add(this);\n      this.tValue = value;\n    }\n    if (!Transition.running) this.value = value;\n  } else this.value = value;\n  if (this.observers && (!Updates || this.observers.length)) {\n    runUpdates(() => {\n      for (let i = 0; i < this.observers.length; i += 1) {\n        const o = this.observers[i];\n        if (Transition && Transition.running && Transition.disposed.has(o)) continue;\n        if (o.observers && o.state !== PENDING) markUpstream(o);\n        o.state = STALE;\n        if (o.pure) Updates.push(o);else Effects.push(o);\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        throw new Error(\"Potential Infinite Loop Detected.\");\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    Transition.running = true;\n    runComputation(node, node.tValue, time);\n    Transition.running = false;\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal.call(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure) {\n  const c = {\n    fn,\n    state: STALE,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  return c;\n}\nfunction runTop(node) {\n  let top = node.state === STALE && node,\n      pending;\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const runningTransition = Transition && Transition.running;\n  while ((node.fn || runningTransition && node.attached) && (node = node.owner)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (node.state === PENDING) pending = node;else if (node.state === STALE) {\n      top = node;\n      pending = undefined;\n    }\n  }\n  if (pending) {\n    const updates = Updates;\n    Updates = null;\n    lookDownstream(pending);\n    Updates = updates;\n    if (!top || top.state !== STALE) return;\n    if (runningTransition) {\n      node = top;\n      while ((node.fn || node.attached) && (node = node.owner)) {\n        if (Transition.disposed.has(node)) return;\n      }\n    }\n  }\n  top && updateComputation(top);\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    completeUpdates(wait);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let cbs;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    cbs = Transition.cb;\n    Transition = null;\n    batch(() => {\n      sources.forEach(v => {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n      });\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (cbs) cbs.forEach(cb => cb());\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookDownstream(node) {\n  node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (source.state === STALE) runTop(source);else if (source.state === PENDING) lookDownstream(source);\n    }\n  }\n}\nfunction markUpstream(node) {\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!o.state) {\n      o.state = PENDING;\n      o.observers && markUpstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.state = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  fns.forEach(f => f(err));\n}\nfunction lookup(owner, key) {\n  return owner && (owner.context && owner.context[key] || owner.owner && lookup(owner.owner, key));\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      let result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    return createMemo(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    });\n  };\n}\n\nconst $RAW = Symbol(\"state-raw\"),\n      $NODE = Symbol(\"state-node\"),\n      $PROXY = Symbol(\"state-proxy\"),\n      $NAME = Symbol(\"state-name\");\nfunction wrap$1(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps$1)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  return obj != null && typeof obj === \"object\" && (!obj.__proto__ || obj.__proto__ === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW]) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\n    let keys = Object.keys(item),\n        desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes) Object.defineProperty(target, $NODE, {\n    value: nodes = {}\n  });\n  return nodes;\n}\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || property === $PROXY || property === $NODE || property === $NAME) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction createDataNode() {\n  const [s, set] = createSignal(undefined, false);\n  s.set = set;\n  return s;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap$1(value) : value;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction setProperty(state, property, value) {\n  if (state[property] === value) return;\n  const array = Array.isArray(state);\n  const len = state.length;\n  const notify = array || !(property in state);\n  if (value === undefined) {\n    delete state[property];\n  } else state[property] = value;\n  let nodes = getDataNodes(state),\n      node;\n  (node = nodes[property]) && node.set();\n  if (array && state.length !== len) (node = nodes.length) && node.set();\n  notify && (node = nodes._) && node.set();\n}\nfunction mergeState(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n      prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n          isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), [part[i]].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeState(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createState(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap$1(unwrappedState);\n  function setState(...args) {\n    batch(() => updatePath(unwrappedState, args));\n  }\n  return [wrappedState, setState];\n}\n\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap(value) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n              set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap(unwrappedState);\n  return wrappedState;\n}\n\nfunction applyState(target, parent, property, merge, key) {\n  let previous = parent[property];\n  if (target === previous) return;\n  if (!isWrappable(target) || !isWrappable(previous) || key && target[key] !== previous[key]) {\n    target !== previous && setProperty(parent, property, target);\n    return;\n  }\n  if (Array.isArray(target)) {\n    if (target.length && previous.length && (!merge || key && target[0][key] != null)) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start][key] === target[start][key]); start++) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n            newIndices = new Map();\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const {\n    merge,\n    key = \"id\"\n  } = options,\n        v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    applyState(v, {\n      state\n    }, \"state\", merge, key);\n    return state;\n  };\n}\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    return isWrappable(value) ? new Proxy(value, setterTraps) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) fn(new Proxy(state, setterTraps));\n    return state;\n  };\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n          for (j = 0; j < newLen; j++) {\n            items[j] = newItems[j];\n            mapped[j] = createRoot(mapper, ctx);\n          }\n          len = newLen;\n        } else {\n          temp = new Array(newLen);\n          tempdisposers = new Array(newLen);\n          indexes && (tempIndexes = new Array(newLen));\n          for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n          for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n            temp[newEnd] = mapped[end];\n            tempdisposers[newEnd] = disposers[end];\n            indexes && (tempIndexes[newEnd] = indexes[end]);\n          }\n          newIndices = new Map();\n          newIndicesNext = new Array(newEnd + 1);\n          for (j = newEnd; j >= start; j--) {\n            item = newItems[j];\n            i = newIndices.get(item);\n            newIndicesNext[j] = i === undefined ? -1 : i;\n            newIndices.set(item, j);\n          }\n          for (i = start; i <= end; i++) {\n            item = items[i];\n            j = newIndices.get(item);\n            if (j !== undefined && j !== -1) {\n              temp[j] = mapped[i];\n              tempdisposers[j] = disposers[i];\n              indexes && (tempIndexes[j] = indexes[i]);\n              j = newIndicesNext[j];\n              newIndices.set(item, j);\n            } else disposers[i]();\n          }\n          for (j = start; j < newLen; j++) {\n            if (j in temp) {\n              mapped[j] = temp[j];\n              disposers[j] = tempdisposers[j];\n              if (indexes) {\n                indexes[j] = tempIndexes[j];\n                indexes[j](j);\n              }\n            } else mapped[j] = createRoot(mapper, ctx);\n          }\n          len = mapped.length = newLen;\n          items = newItems.slice(0);\n        }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    const newItems = list() || [];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper, ctx);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = mapped.length = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i], false);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nfunction createComponent(Comp, props) {\n  if (sharedConfig.context) {\n    const c = sharedConfig.context;\n    setHydrateContext(nextHydrateContext());\n    const r = untrack(() => Comp(props));\n    setHydrateContext(c);\n    return r;\n  }\n  return untrack(() => Comp(props));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = sources[i][property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in sources[i]) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(sources[i]));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (descriptors[key]) Object.defineProperty(clone, key, descriptors[key]);\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    let comp;\n    if (ctx && sharedConfig.resources) {\n      ctx.count++;\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(mod.default);\n        setHydrateContext(undefined);\n      });\n      comp = s;\n    } else {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => (p || (p = fn())).then(mod => mod.default);\n  return wrap;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, (a, b) => strictEqual ? a === b : !a === !b);\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, (a, b) => a && a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]);\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nfunction ErrorBoundary(props) {\n  const [errored, setErrored] = createSignal();\n  onError(setErrored);\n  let e;\n  return createMemo(() => {\n    if ((e = errored()) != null) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(null))) : f;\n    }\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let index = 0,\n      suspenseSetter,\n      showContent,\n      showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const registry = [],\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        registry[index++] = {\n          inFallback,\n          showContent,\n          showFallback\n        };\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = registry.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      registry.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = registry.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = registry[n].inFallback();\n      if (!stop && !s) {\n        registry[n].showContent(visibleContent);\n        registry[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          registry[n].showFallback(visibleFallback);\n        } else registry[n].showFallback(false);\n        stop = true;\n        registry[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  };\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      const rendered = untrack(() => props.children);\n      return createMemo(() => {\n        const inFallback = store.inFallback(),\n              visibleContent = showContent ? showContent() : true,\n              visibleFallback = showFallback ? showFallback() : true;\n        if (!inFallback && visibleContent) {\n          store.resolved = true;\n          resumeEffects(store.effects);\n          return rendered;\n        }\n        if (!visibleFallback) return;\n        return props.fallback;\n      });\n    }\n  });\n}\n\nfunction awaitSuspense() {}\nlet DEV;\n\nexport { $RAW, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, awaitSuspense, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createMutable, createRenderEffect, createResource, createRoot, createSelector, createSignal, createState, equalFn, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, on, onCleanup, onError, onMount, produce, reconcile, requestCallback, runWithOwner, sharedConfig, splitProps, untrack, unwrap, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"allowpaymentrequest\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"ismap\", \"itemscope\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\", \"truespeed\"];\nconst Properties = new Set([\"className\", \"indeterminate\", \"value\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\n\nfunction memo(fn, equal) {\n  return createMemo(fn, undefined, equal);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) parentNode.removeChild(a[aStart]);\n        aStart++;\n      }\n    } else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    } else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else parentNode.removeChild(a[aStart++]);\n    }\n  }\n}\n\nconst $$EVENTS = Symbol(\"delegated-events\");\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  if (check && t.innerHTML.split(\"<\").length - 1 !== check) throw `Template html does not match input:\\n${t.innerHTML}\\n\\n${html}`;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents() {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || key in value) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue) continue;\n    toggleClassKey(node, key, classValue);\n    prev[key] = classValue;\n  }\n  return value;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (prev = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}) {\n  let isCE, isProp, isChildProp;\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    if (value === prevProps[prop]) continue;\n    if (prop === \"style\") {\n      style(node, value, prevProps[prop]);\n    } else if (prop === \"class\" && !isSVG) {\n      node.className = value;\n    } else if (prop === \"classList\") {\n      classList(node, value, prevProps[prop]);\n    } else if (prop === \"ref\") {\n      value(node);\n    } else if (prop.slice(0, 3) === \"on:\") {\n      node.addEventListener(prop.slice(3), value);\n    } else if (prop.slice(0, 10) === \"oncapture:\") {\n      node.addEventListener(prop.slice(10), value, true);\n    } else if (prop.slice(0, 2) === \"on\") {\n      const name = prop.slice(2).toLowerCase();\n      const delegate = DelegatedEvents.has(name);\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (isProp = Properties.has(prop)) || (isCE = node.nodeName.includes(\"-\"))) {\n      if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[prop] = value;\n    } else {\n      const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n      if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n    }\n    prevProps[prop] = value;\n  }\n}\nfunction hydrate(code, element) {\n  sharedConfig.resources = globalThis._$HYDRATION.resources;\n  sharedConfig.completed = globalThis._$HYDRATION.completed;\n  sharedConfig.events = globalThis._$HYDRATION.events;\n  sharedConfig.context = {\n    id: \"\",\n    count: 0,\n    loadResource: globalThis._$HYDRATION.loadResource\n  };\n  sharedConfig.registry = new Map();\n  gatherHydratable(element);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction gatherHydratable(element) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    sharedConfig.registry.set(node.getAttribute(\"data-hk\"), node);\n  }\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node;\n    }\n  });\n  while (node !== null) {\n    const handler = node[key];\n    if (handler) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context && current.length) return current;\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else {\n      if (Array.isArray(current)) {\n        if (current.length === 0) {\n          appendNodes(parent, array, marker);\n        } else reconcileArrays(parent, current, array);\n      } else if (current == null || current === \"\") {\n        appendNodes(parent, array);\n      } else {\n        reconcileArrays(parent, multi && current || [parent.firstChild], array);\n      }\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else console.warn(`Skipped inserting`, value);\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && parent.removeChild(el);\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\n\nfunction renderToString(fn, options) {}\nfunction renderToStringAsync(fn, options) {}\nfunction renderToNodeStream(fn, options) {}\nfunction renderToWebStream(fn, options) {}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction escape(html) {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, ChildProperties, DelegatedEvents, Dynamic, Portal, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, gatherHydratable, getHydrationKey, getNextElement, getNextMarker, hydrate, insert, isServer, memo, render, renderToNodeStream, renderToString, renderToStringAsync, renderToWebStream, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrSpread, ssrStyle, style, template };\n","import { createSignal as t, createComputed as n, For as e } from \"solid-js\";import { template as o, delegateEvents as r, setAttribute as i, memo as c, addEventListener as l, style as s, effect as u, insert as d, createComponent as a } from \"solid-js/web\";export default {};const v = o(\"<table><thead><tr></tr></thead><tbody></tbody></table>\", 8),f = o(\"<th></th>\", 2),b = o(\"<tr></tr>\", 2),h = o(\"<td></td>\", 2),m = o('<span class=\"sort-icon\"></span>', 2);function p(o) {var r;const [c, p] = t(),[S, j] = t(o.rows, !1);function D() {const t = c();return void 0 !== t ? t : void 0 !== o.defaultSortDirection ? o.defaultSortDirection : [null, null];}n(() => {j(o.rows);});const C = null !== (r = o.rowSorter) && void 0 !== r ? r : _;function R() {const t = D();null === t[0] && void 0 !== o.defaultSortDirection ? j(C(S(), o.defaultSortDirection)) : null !== t[0] && j(C(S(), t));}const { headerRenderer: x = $, bodyRenderer: O = w, getRowID: A = k, accessors: I } = o;return void 0 === o.columns && (o.columns = function (t, n = 0) {const e = t[n],o = Object.keys(e),r = o.length,i = new Array(r);for (let t = 0; t < r; t++) i[t] = { id: o[t] };return i;}(o.rows, o.representitiveRowNumber)), R(), (() => {const t = v.cloneNode(!0),n = t.firstChild,r = n.firstChild,c = n.nextSibling;return d(r, a(e, { get each() {return o.columns;}, children: t => {const n = !1 !== t.sortable;return (() => {const e = f.cloneNode(!0);var o;return l(e, \"click\", n ? (o = t.id, t => {p(function (t, n, e) {let o;return o = e ? [null, null] : t[0] === n ? [t[0], \"asc\" === t[1] ? \"desc\" : \"asc\"] : [n, \"asc\"], o;}(D(), o, t.shiftKey)), R();}) : void 0, !0), e.className = n ? \"sortable\" : void 0, d(e, () => x(t), null), d(e, () => n ? function (t, n) {let e;e = null === t[0] || t[0] !== n ? N : \"asc\" === t[1] ? g : y;return (() => {const t = m.cloneNode(!0);return d(t, e), t;})();}(D(), t.id) : void 0, null), u(() => i(e, \"id\", I ? String(t.id) : void 0)), e;})();} })), d(c, a(e, { get each() {return S();}, children: t => {const n = function (t) {return I ? A(t) : void 0;}(t);return (() => {const r = b.cloneNode(!0);return i(r, \"id\", n), d(r, a(e, { get each() {return o.columns;}, children: e => (() => {const o = h.cloneNode(!0);return l(o, \"click\", void 0 !== e.onClick ? n => e.onClick(n, t) : void 0, !0), d(o, () => O(t, e.id)), u(() => i(o, \"id\", n ? `${n}.${e.id}` : void 0)), o;})() })), r;})();} })), u(n => {var e;const r = `solid-simple-table ${null !== (e = o.className) && void 0 !== e ? e : \"\"}`,i = o.style;return r !== n._v$ && (t.className = n._v$ = r), n._v$2 = s(t, i, n._v$2), n;}, { _v$: void 0, _v$2: void 0 }), t;})();}export { p as SimpleTable };const y = \"↑\",g = \"↓\",N = \"⇅\";function S(t) {return \"string\" == typeof t ? t : JSON.stringify(t);}function $(t) {var n;return null !== (n = t.label) && void 0 !== n ? n : t.id;}function w(t, n) {return S(\"object\" == typeof t ? t[n] : t);}function k(t) {return S(t);}function _(t, n) {if (!t.length) return t;let e;const o = n[0];return e = \"object\" == typeof t[0] ? t.sort((t, n) => {const e = t[o],r = n[o];return e === r ? 0 : e < r ? -1 : 1;}) : t.sort(), \"desc\" === n[1] ? e.reverse() : e;}r([\"click\"]);","import { template as _$template } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { setAttribute as _$setAttribute } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<div id=\"linter-panel\"></div>`, 2),\n      _tmpl$2 = _$template(`<div></div>`, 2);\n\nimport { createSignal, onMount } from 'solid-js';\nimport { SimpleTable } from 'solid-simple-table';\nimport { $range, severityNames, sortMessages, visitMessage, openExternally, getPathOfMessage } from '../helpers';\nimport type Delegate from './delegate';\nimport type { LinterMessage } from '../types';\ntype Props = {\n  delegate: Delegate;\n};\nexport function PanelComponent(props: Props) {\n  const [getMessages, setMessages] = createSignal(props.delegate.filteredMessages, false);\n  onMount(() => {\n    props.delegate.onDidChangeMessages(messages => {\n      setMessages(messages);\n    });\n  });\n  const columns = [{\n    id: 'severity',\n    label: 'Severity'\n  }, {\n    id: 'linterName',\n    label: 'Provider'\n  }, {\n    id: 'excerpt',\n    label: 'Description',\n    onClick,\n    sortable: false\n  }, {\n    id: 'line',\n    label: 'Line',\n    onClick\n  }];\n\n  if (props.delegate.panelRepresents === 'Entire Project') {\n    columns.push({\n      id: 'file',\n      label: 'File',\n      onClick\n    });\n  }\n\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true);\n\n    _$setAttribute(_el$, \"tabindex\", -1);\n\n    _el$.style.setProperty(\"overflowY\", 'scroll');\n\n    _el$.style.setProperty(\"height\", '100%');\n\n    _$insert(_el$, _$createComponent(SimpleTable, {\n      get rows() {\n        return getMessages();\n      },\n\n      columns: columns,\n      defaultSortDirection: ['severity', 'asc'],\n      rowSorter: sortMessages,\n      accessors: true,\n      getRowID: (i: LinterMessage) => i.key,\n      bodyRenderer: bodyRenderer,\n      style: {\n        width: '100%'\n      },\n      className: \"linter dark\"\n    }));\n\n    return _el$;\n  })();\n}\n\nfunction bodyRenderer(row: LinterMessage, column: string): string | HTMLElement {\n  const range = $range(row);\n\n  switch (column) {\n    case 'file':\n      return getPathOfMessage(row);\n\n    case 'line':\n      return range ? `${range.start.row + 1}:${range.start.column + 1}` : '';\n\n    case 'excerpt':\n      return row.excerpt;\n\n    case 'severity':\n      return ((() => {\n        const _el$2 = _tmpl$2.cloneNode(true);\n\n        _$insert(_el$2, () => severityNames[row.severity]);\n\n        _$effect(() => _el$2.className = `solid-simple-table linter ${row.severity}`);\n\n        return _el$2;\n      })() as HTMLElement);\n\n    default:\n      return row[column];\n  }\n}\n\nasync function onClick(e: MouseEvent, row: LinterMessage) {\n  if ((e.target as HTMLElement).tagName === 'A') {\n    return;\n  }\n\n  if (process.platform === 'darwin' ? e.metaKey : e.ctrlKey) {\n    if (e.shiftKey) {\n      openExternally(row);\n    } else {\n      await visitMessage(row, true);\n    }\n  } else {\n    await visitMessage(row);\n  }\n}","import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { CompositeDisposable, Dock, WorkspaceCenter } from 'atom';\nimport { WORKSPACE_URI, DOCK_ALLOWED_LOCATIONS, DOCK_DEFAULT_LOCATION } from '../helpers';\nimport type Delegate from './delegate';\nimport { render } from 'solid-js/web'; // NOTE: these were lazy\n\nimport { PanelComponent } from './component'; // TODO Make these API public\n\nexport type PaneContainer = Dock & {\n  state: {\n    size: number;\n  };\n  render: Function;\n  paneForItem: WorkspaceCenter['paneForItem'];\n  location: string;\n}; // eslint-disable-next-line no-use-before-define\n\nfunction getPaneContainer(item: PanelDock): PaneContainer | null {\n  const paneContainer = atom.workspace.paneContainerForItem(item); // NOTE: This is an internal API access\n  // It's necessary because there's no Public API for it yet\n\n  if (paneContainer && // @ts-ignore internal API\n  typeof paneContainer.state === 'object' && // @ts-ignore internal API\n  typeof paneContainer.state.size === 'number' && // @ts-ignore internal API\n  typeof paneContainer.render === 'function') {\n    // @ts-ignore internal API\n    return (paneContainer as PaneContainer);\n  }\n\n  return null;\n}\n\nexport default class PanelDock {\n  element: HTMLElement = document.createElement('div');\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  panelHeight: number = 100;\n  alwaysTakeMinimumSpace: boolean = true;\n  lastSetPaneHeight?: number;\n\n  constructor(delegate: Delegate) {\n    this.subscriptions.add(atom.config.observe('linter-ui-default.panelHeight', panelHeight => {\n      const changed = typeof this.panelHeight === 'number';\n      this.panelHeight = panelHeight;\n\n      if (changed) {\n        this.doPanelResize(true);\n      }\n    }), atom.config.observe('linter-ui-default.alwaysTakeMinimumSpace', alwaysTakeMinimumSpace => {\n      this.alwaysTakeMinimumSpace = alwaysTakeMinimumSpace;\n    }));\n    this.doPanelResize();\n    render(() => _$createComponent(PanelComponent, {\n      delegate: delegate\n    }), this.element);\n  } // NOTE: Chose a name that won't conflict with Dock APIs\n\n\n  doPanelResize(forConfigHeight = false) {\n    const paneContainer = getPaneContainer(this);\n\n    if (paneContainer === null) {\n      return;\n    }\n\n    let minimumHeight: number | null = null;\n    const paneContainerView = atom.views.getView(paneContainer);\n\n    if (paneContainerView && this.alwaysTakeMinimumSpace) {\n      // NOTE: Super horrible hack but the only possible way I could find :((\n      const dockNamesElement = paneContainerView.querySelector('.list-inline.tab-bar.inset-panel');\n      const dockNamesRects = dockNamesElement ? dockNamesElement.getClientRects()[0] : null;\n      const tableElement = this.element.querySelector('table');\n      const panelRects = tableElement ? tableElement.getClientRects()[0] : null;\n\n      if (dockNamesRects && panelRects) {\n        minimumHeight = dockNamesRects.height + panelRects.height + 1;\n      }\n    }\n\n    let updateConfigHeight: number | null = null;\n    const heightSet = minimumHeight !== null && !forConfigHeight ? Math.min(minimumHeight, this.panelHeight) : this.panelHeight; // Person resized the panel, save new resized value to config\n\n    if (this.lastSetPaneHeight !== undefined && paneContainer.state.size !== this.lastSetPaneHeight && !forConfigHeight) {\n      updateConfigHeight = paneContainer.state.size;\n    }\n\n    this.lastSetPaneHeight = heightSet;\n    paneContainer.state.size = heightSet;\n    paneContainer.render(paneContainer.state);\n\n    if (updateConfigHeight !== null) {\n      atom.config.set('linter-ui-default.panelHeight', updateConfigHeight);\n    }\n  }\n  /* eslint-disable class-methods-use-this */\n  // atom API requires these methods\n\n\n  getURI() {\n    return WORKSPACE_URI;\n  }\n\n  getTitle() {\n    return 'Linter';\n  }\n\n  getDefaultLocation() {\n    return DOCK_DEFAULT_LOCATION;\n  }\n\n  getAllowedLocations() {\n    return DOCK_ALLOWED_LOCATIONS;\n  }\n\n  getPreferredHeight() {\n    return atom.config.get('linter-ui-default.panelHeight');\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  dispose() {\n    this.subscriptions.dispose();\n    const paneContainer = getPaneContainer(this);\n\n    if (paneContainer !== null && !this.alwaysTakeMinimumSpace && paneContainer.state.size !== this.panelHeight) {\n      atom.config.set('linter-ui-default.panelHeight', paneContainer.state.size);\n      paneContainer.paneForItem(this)?.destroyItem(this, true);\n    }\n  }\n\n}","export function getElement(icon: string): HTMLElement {\n  const element = document.createElement('a');\n  element.classList.add(`icon-${icon}`);\n  element.appendChild(document.createTextNode(''));\n  return element;\n}","import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { addEventListener as _$addEventListener } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<a><span></span></a>`, 4),\n      _tmpl$2 = _$template(`<button class=\"btn fix-btn\">Fix</button>`, 2),\n      _tmpl$3 = _$template(`<a><span class=\"icon linter-icon icon-alignment-aligned-to\"></span></a>`, 4),\n      _tmpl$4 = _$template(`<a><span class=\"icon linter-icon icon-link\"></span></a>`, 4),\n      _tmpl$5 = _$template(`<div class=\"linter-line\"></div>`, 2),\n      _tmpl$6 = _$template(`<div class=\"linter-message\"><div><div class=\"linter-text\"><div class=\"provider-name\"></div></div><div class=\"linter-buttons-right\"></div></div></div>`, 10);\n\nimport { createSignal, onMount, createEffect, Show } from 'solid-js';\nimport * as url from 'url';\nimport once from 'lodash/once';\nimport debounce from 'lodash/debounce';\nlet marked: typeof import('marked') | undefined;\nimport { visitMessage, openExternally, openFile, applySolution, getActiveTextEditor, sortSolutions } from '../helpers';\nimport type TooltipDelegate from './delegate';\nimport type { Message, LinterMessage } from '../types'; // TODO why do we need to debounce/once these buttons? They shouldn't be called multiple times\n\ntype Props = {\n  key: string;\n  message: Message;\n  delegate: TooltipDelegate;\n};\nexport default function MessageElement(props: Props) {\n  const [getDescription, setDescription] = createSignal('Loading ...');\n  const [getShowDescription, setShowDescription] = createSignal(false);\n  createEffect(async () => {\n    if (getShowDescription()) {\n      const description = props.message.description;\n      console.log(description);\n\n      if (typeof description === 'string') {\n        setDescription(await renderMarkdown(description));\n      } else if (typeof description === 'function') {\n        const response = await description();\n\n        if (typeof response !== 'string') {\n          throw new Error(`Expected result to be string, got: ${typeof response}`);\n        }\n\n        setDescription(response);\n      } else {\n        console.error('[Linter] Invalid description detected, expected string or function but got:', typeof description);\n      }\n    }\n  });\n  onMount(() => {\n    props.delegate.onShouldUpdate(() => {\n      setShowDescription(false);\n      setDescription('Loading ...');\n    });\n    props.delegate.onShouldExpand(() => {\n      setShowDescription(true);\n    });\n    props.delegate.onShouldCollapse(() => {\n      setShowDescription(false);\n    });\n  }); // These props are static (non-reactive)\n\n  const {\n    message,\n    delegate\n  } = props;\n  return (() => {\n    const _el$ = _tmpl$6.cloneNode(true),\n          _el$2 = _el$.firstChild,\n          _el$6 = _el$2.firstChild,\n          _el$7 = _el$6.firstChild,\n          _el$8 = _el$6.nextSibling;\n\n    _el$.$$click = thisOpenFile;\n\n    _$insert(_el$2, _$createComponent(Show, {\n      get when() {\n        return message.description !== undefined;\n      },\n\n      get children() {\n        const _el$3 = _tmpl$.cloneNode(true),\n              _el$4 = _el$3.firstChild;\n\n        _el$3.$$click = () => setShowDescription(!getShowDescription());\n\n        _$effect(() => _el$4.className = `icon linter-icon icon-${getShowDescription() ? 'chevron-down' : 'chevron-right'}`);\n\n        return _el$3;\n      }\n\n    }), _el$6);\n\n    _$insert(_el$2, _$createComponent(Show, {\n      get when() {\n        return canBeFixed(message);\n      },\n\n      get children() {\n        const _el$5 = _tmpl$2.cloneNode(true);\n\n        _$addEventListener(_el$5, \"click\", once(() => onFixClick(message)), true);\n\n        return _el$5;\n      }\n\n    }), _el$6);\n\n    _$insert(_el$7, _$createComponent(Show, {\n      get when() {\n        return delegate.showProviderName === true;\n      },\n\n      get children() {\n        return `${message.linterName}: `;\n      }\n\n    }));\n\n    _$insert(_el$6, () => // main message text\n    message.excerpt, null);\n\n    _$insert(_el$8, _$createComponent(Show, {\n      get when() {\n        return message.reference?.file !== undefined;\n      },\n\n      get children() {\n        const _el$9 = _tmpl$3.cloneNode(true);\n\n        _$addEventListener(_el$9, \"click\", debounce(() => visitMessage(message, true)), true);\n\n        return _el$9;\n      }\n\n    }), null);\n\n    _$insert(_el$8, _$createComponent(Show, {\n      get when() {\n        return message.url !== undefined;\n      },\n\n      get children() {\n        const _el$10 = _tmpl$4.cloneNode(true);\n\n        _$addEventListener(_el$10, \"click\", debounce(() => openExternally(message)), true);\n\n        return _el$10;\n      }\n\n    }), null);\n\n    _$insert(_el$, _$createComponent(Show, {\n      get when() {\n        return getShowDescription();\n      },\n\n      get children() {\n        const _el$11 = _tmpl$5.cloneNode(true);\n\n        _$effect(() => _el$11.innerHTML = getDescription());\n\n        return _el$11;\n      }\n\n    }), null);\n\n    _$effect(() => _el$2.className = `linter-excerpt ${message.severity}`);\n\n    return _el$;\n  })();\n}\n\nfunction onFixClick(message: Message): void {\n  const messageSolutions = message.solutions;\n  const textEditor = getActiveTextEditor();\n\n  if (textEditor !== null) {\n    if (Array.isArray(messageSolutions) && messageSolutions.length > 0) {\n      applySolution(textEditor, sortSolutions(messageSolutions)[0]);\n    }\n  }\n}\n\nfunction canBeFixed(message: LinterMessage): boolean {\n  const messageSolutions = message.solutions;\n\n  if (Array.isArray(messageSolutions) && messageSolutions.length > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nasync function thisOpenFile(ev: MouseEvent) {\n  if (!(ev.target instanceof HTMLElement)) {\n    return;\n  }\n\n  const href = findHref(ev.target);\n\n  if (href === null) {\n    return;\n  } // parse the link. e.g. atom://linter?file=<path>&row=<number>&column=<number>\n\n\n  const {\n    protocol,\n    hostname,\n    query\n  } = url.parse(href, true);\n\n  if (protocol !== 'atom:' || hostname !== 'linter') {\n    return;\n  } // TODO: based on the types query is never null\n\n\n  if (query?.file === undefined) {\n    return;\n  } else {\n    const {\n      file,\n      row,\n      column\n    } = query; // TODO: will these be an array?\n\n    await openFile(\n    /* file */\n    Array.isArray(file) ? file[0] : file,\n    /* position */\n    {\n      row: row !== undefined ? parseInt(Array.isArray(row) ? row[0] : row, 10) : 0,\n      column: column !== undefined ? parseInt(Array.isArray(column) ? column[0] : column, 10) : 0\n    });\n  }\n}\n\nfunction findHref(elementGiven: HTMLElement): string | null {\n  let el: HTMLElement | null = elementGiven;\n\n  while (el !== null && !el.classList.contains('linter-line')) {\n    if (el instanceof HTMLAnchorElement) {\n      return el.href;\n    }\n\n    el = el.parentElement;\n  }\n\n  return null;\n}\n\nasync function renderMarkdown(description: string) {\n  if (marked === undefined) {\n    // eslint-disable-next-line require-atomic-updates\n    marked = (await import('marked')).default;\n  }\n\n  return marked(description);\n}\n\n_$delegateEvents([\"click\"]);","import type { TextEditor, TextEditorComponent } from \"atom\"\n\n/** makes the text selectable and copyable\n *\n * Note: you can directly add `user-select: text` (and `pointer-events: all`) in CSS for better performance\n */\nexport function makeOverlaySelectable(editor: TextEditor, overlayElement: HTMLElement, focusFix = true) {\n  // allow the browser to handle selecting\n  overlayElement.setAttribute(\"tabindex\", \"-1\")\n\n  // make it selectable\n  if (!overlayElement.style.userSelect || overlayElement.style.userSelect === \"none\") {\n    overlayElement.style.userSelect = \"text\"\n  }\n\n  if (focusFix) {\n    // fix overlay focus issue\n    overlayFocusFix(editor, overlayElement)\n  }\n\n  // add copy keybindings\n  overlayElement.classList.add(\"native-key-bindings\")\n}\n\n/**\n * - focus on the datatip once the text is selected (cursor gets disabled temporarily)\n * - remove focus once mouse leaves\n */\nexport function overlayFocusFix(editor: TextEditor, element: HTMLElement) {\n  const editorComponent = atom.views.getView(editor).getComponent()\n  element.addEventListener(\"mousedown\", () => {\n    blurEditor(editorComponent)\n    element.addEventListener(\"mouseleave\", () => {\n      focusEditor(editorComponent)\n    })\n  })\n}\n\nexport function focusEditor(editorComponent: TextEditorComponent) {\n  // @ts-ignore internal api\n  editorComponent?.didFocus()\n}\n\nexport function blurEditor(editorComponent: TextEditorComponent) {\n  // @ts-ignore internal api\n  editorComponent?.didBlurHiddenInput({\n    relatedTarget: null,\n  })\n}\n\n/*\n██████  ███████ ██████  ██████  ███████  ██████  █████  ████████ ███████ ██████\n██   ██ ██      ██   ██ ██   ██ ██      ██      ██   ██    ██    ██      ██   ██\n██   ██ █████   ██████  ██████  █████   ██      ███████    ██    █████   ██   ██\n██   ██ ██      ██      ██   ██ ██      ██      ██   ██    ██    ██      ██   ██\n██████  ███████ ██      ██   ██ ███████  ██████ ██   ██    ██    ███████ ██████\n*/\n\n/** @deprecated use `makeOverlaySelectable` instead.\n *\n * Makes the overlay component copyable\n * - you should call `makeOverlaySelectable` before this\n * - If your element already has mouseenter and mouseleav listeners, directly use `copyListener`\n */\nexport function makeOverLayCopyable(element: HTMLElement) {\n  element.addEventListener(\"mouseenter\", () => {\n    element.addEventListener(\"keydown\", copyListener)\n  })\n\n  element.addEventListener(\"mouseleave\", () => {\n    element.removeEventListener(\"keydown\", copyListener)\n  })\n}\n\n/** @deprecated use `makeOverlaySelectable` instead.\n *\n * A manual copy listener\n * Usage. Add the listener to your mouse enter and mouseleave listeners\n   ```ts\n   element.addEventListener(\"mouseenter\", () => {element.addEventListener(\"keydown\", copyListener)}`\n   element.addEventListener(\"mouseleave\", () => {element.removeEventListener(\"keydown\", copyListener)}`\n   ```\n*/\nexport async function copyListener(event: KeyboardEvent) {\n  event.preventDefault()\n  if (event.ctrlKey && event.key === \"c\") {\n    const text = document.getSelection()?.toString() ?? \"\"\n    await navigator.clipboard.writeText(text)\n  }\n} // TODO we should not need to manually listen for copy paste\n","import { template as _$template } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<div class=\"linter-messages\"></div>`, 2);\n\nimport { For, Show, render } from 'solid-js/web';\nimport { CompositeDisposable, Emitter, TextEditorElement } from 'atom';\nimport type { Disposable, Point, TextEditor, DisplayMarker } from 'atom';\nimport Delegate from './delegate';\nimport MessageElement from './message';\nimport { $range } from '../helpers';\nimport type { LinterMessage } from '../types';\nimport { makeOverlaySelectable } from 'atom-ide-base/commons-ui/float-pane/selectable-overlay';\nexport default class Tooltip {\n  marker: DisplayMarker;\n  element: HTMLElement = document.createElement('div');\n  emitter = new Emitter<{\n    'did-destroy': never;\n  }>();\n  messages: Array<LinterMessage>;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor(messages: Array<LinterMessage>, position: Point, textEditor: TextEditor) {\n    this.messages = messages;\n    this.marker = textEditor.markBufferRange([position, position]);\n    this.marker.onDidDestroy(() => this.emitter.emit('did-destroy'));\n    const delegate = new Delegate(); // make tooltips copyable and selectable\n\n    makeOverlaySelectable(textEditor, this.element);\n    this.element.id = 'linter-tooltip';\n    textEditor.decorateMarker(this.marker, {\n      type: 'overlay',\n      item: this.element\n    });\n    this.subscriptions.add(this.emitter, delegate);\n    render(() => _$createComponent(TooltipElement, {\n      messages: messages,\n      delegate: delegate\n    }), this.element);\n    moveElement(this.element, position, textEditor);\n  }\n\n  isValid(position: Point, messages: Map<string, LinterMessage>): boolean {\n    if (this.messages.length !== 1 || !messages.has(this.messages[0].key)) {\n      return false;\n    }\n\n    const range = $range(this.messages[0]);\n    return range?.containsPoint(position) === true;\n  }\n\n  onDidDestroy(callback: () => void): Disposable {\n    return this.emitter.on('did-destroy', callback);\n  }\n\n  dispose() {\n    this.emitter.emit('did-destroy');\n    this.subscriptions.dispose();\n  }\n\n}\ninterface TooltipElementProps {\n  messages: LinterMessage[];\n  delegate: Delegate;\n}\n\nfunction TooltipElement(props: TooltipElementProps) {\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true);\n\n    _$insert(_el$, _$createComponent(For, {\n      get each() {\n        return props.messages;\n      },\n\n      children: message => _$createComponent(Show, {\n        get when() {\n          return message.version === 2;\n        },\n\n        get children() {\n          return _$createComponent(MessageElement, {\n            get key() {\n              return message.key;\n            },\n\n            get delegate() {\n              return props.delegate;\n            },\n\n            message: message\n          });\n        }\n\n      })\n    }));\n\n    return _el$;\n  })();\n}\n/** Move box above the current editing line */\n// HACK: patch the decoration's style so it is shown above the current line\n\n\nfunction moveElement(element: HTMLElement, position: Point, textEditor: TextEditor) {\n  setTimeout(() => {\n    const hight = element.getBoundingClientRect().height;\n    const lineHight = textEditor.getLineHeightInPixels(); // @ts-ignore: internal API\n\n    const availableHight = (position.row - textEditor.getFirstVisibleScreenRow()) * lineHight;\n\n    if (hight < availableHight) {\n      const overlay = element.parentElement;\n\n      if (overlay !== null) {\n        overlay.style.transform = `translateY(-${2 + lineHight + hight}px)`;\n      }\n    } else {\n      // move down so it does not overlap with datatip-overlay\n      // @ts-ignore\n      const dataTip = (textEditor.getElement() as TextEditorElement).querySelector<HTMLElement>('.datatip-overlay');\n\n      if (dataTip !== null) {\n        const overlay = element.parentElement;\n\n        if (overlay !== null) {\n          overlay.style.transform = `translateY(${dataTip.clientHeight}px)`;\n        }\n      }\n    }\n\n    element.style.visibility = 'visible';\n  }, 50);\n}","import { TextEditor } from \"atom\"\n\n/**\n * Find if an editor's largeness based on the given threashold\n * @param editor\n * @param largeLineCount lineCountIfLarge threashold\n * @param longLineLength lineLengthIfLong threashold\n * @returns the largness score if editor is large. Otherwise it returns 0 (a small file)\n */\nexport function largeness(\n  editor: TextEditor,\n  largeLineCount: number = atom.config.get(\"atom-ide-base.largeLineCount\") || 4000,\n  longLineLength: number = atom.config.get(\"atom-ide-base.longLineLength\") || 4000\n) {\n  const lineCount = lineCountIfLarge(editor, largeLineCount)\n  if (lineCount !== 0) {\n    return lineCount\n  }\n  const longLine = lineLengthIfLong(editor, longLineLength)\n  if (longLine !== 0) {\n    return longLine\n  }\n  return 0 // small file\n}\n\n/**\n * Find if an editor has a line that is longer than the given threashold\n * @param editor\n * @param threashold largeLineCount threashold\n * @returns the line count if it is larger than threashold. Otherwise it returns 0 (a small file)\n */\nexport function lineCountIfLarge(editor: TextEditor, threashold: number) {\n  // @ts-ignore\n  if (editor.largeFileMode) {\n    return 100000\n  }\n  const lineCount = editor.getLineCount()\n  if (lineCount >= threashold) {\n    return lineCount\n  }\n  return 0 // small file\n}\n\n/**\n * Find if an editor has a line that is longer than the given threashold\n * @param editor\n * @param threashold lineLengthForRow threashold\n * @param lineCount count up to this line. Default is {editor.getLineCount()}\n * @returns the first line length that has a length larger than threashold. If no line is found, it returns 0\n */\nexport function lineLengthIfLong(editor: TextEditor, threashold: number, lineCount: number = editor.getLineCount()) {\n  const buffer = editor.getBuffer()\n  for (let i = 0, len = lineCount; i < len; i++) {\n    const lineLength = buffer.lineLengthForRow(i)\n    if (lineLength > threashold) {\n      return lineLength\n    }\n  }\n  return 0 // small file\n}\n","import { CompositeDisposable } from 'atom';\nimport debounce from 'lodash/debounce';\nimport disposableEvent from 'disposable-event';\nimport { calculateDecorations } from './helpers';\nimport { get } from '../helpers';\nimport type { LinterMessage } from '../types';\nimport { TargetWithAddEventListener } from 'disposable-event/src/target';\nexport type TreeViewHighlight = {\n  info: boolean;\n  error: boolean;\n  warning: boolean;\n};\nexport default class TreeView {\n  messages: Array<LinterMessage> = [];\n  decorations: Record<string, TreeViewHighlight> = {};\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  decorateOnTreeView?: 'Files and Directories' | 'Files' | 'None';\n\n  constructor() {\n    this.subscriptions.add(atom.config.observe('linter-ui-default.decorateOnTreeView', decorateOnTreeView => {\n      if (typeof this.decorateOnTreeView === 'undefined') {\n        this.decorateOnTreeView = decorateOnTreeView;\n      } else if (decorateOnTreeView === 'None') {\n        this.update([]);\n        this.decorateOnTreeView = decorateOnTreeView;\n      } else {\n        const messages = this.messages;\n        this.decorateOnTreeView = decorateOnTreeView;\n        this.update(messages);\n      }\n    }));\n    setTimeout(() => {\n      const element = TreeView.getElement();\n\n      if (!element) {\n        return;\n      } // Subscription is only added if the CompositeDisposable hasn't been disposed\n\n\n      this.subscriptions.add(disposableEvent(((element as unknown) as TargetWithAddEventListener), 'click', debounce(() => {\n        this.update();\n      }), {\n        passive: true\n      }));\n    }, 100);\n  }\n\n  update(givenMessages: Array<LinterMessage> | null | undefined = null) {\n    if (Array.isArray(givenMessages)) {\n      this.messages = givenMessages;\n    }\n\n    const messages = this.messages;\n    const element = TreeView.getElement();\n    const decorateOnTreeView = this.decorateOnTreeView;\n\n    if (!element || decorateOnTreeView === 'None') {\n      return;\n    }\n\n    this.applyDecorations(calculateDecorations(decorateOnTreeView, messages));\n  }\n\n  applyDecorations(decorations: Record<string, TreeViewHighlight | undefined>) {\n    const treeViewElement = TreeView.getElement();\n\n    if (!treeViewElement) {\n      return;\n    }\n\n    const elementCache = new Map<string, HTMLElement>();\n    const appliedDecorations: Record<string, TreeViewHighlight> = {};\n    const filePaths = Object.keys(this.decorations);\n\n    for (const filePath of filePaths) {\n      if (!(filePath in decorations)) {\n        // Removed\n        const element = get(elementCache, filePath, () => TreeView.getElementByPath(treeViewElement, filePath));\n\n        if (element !== null) {\n          removeDecoration(element);\n        }\n      }\n    }\n\n    const filePathsNew = Object.keys(decorations);\n\n    for (const filePath of filePathsNew) {\n      const element = get(elementCache, filePath, () => TreeView.getElementByPath(treeViewElement, filePath));\n\n      if (element !== null) {\n        // decorations[filePath] is not undefined because we are looping over the existing keys\n        const decoration = (decorations[filePath] as TreeViewHighlight);\n        handleDecoration(element, decoration, Boolean(this.decorations[filePath]));\n        appliedDecorations[filePath] = decoration;\n      }\n    }\n\n    this.decorations = appliedDecorations;\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n  static getElement(): HTMLElement | null {\n    return document.querySelector('.tree-view');\n  }\n\n  static getElementByPath(parent: HTMLElement, filePath: string): HTMLElement | null {\n    return parent.querySelector(`[data-path=${CSS.escape(filePath)}]`);\n  }\n\n}\n\nfunction handleDecoration(element: HTMLElement, highlights: TreeViewHighlight, update: boolean = false) {\n  let decoration: HTMLElement | null = null;\n\n  if (update) {\n    decoration = element.querySelector('linter-decoration');\n  }\n\n  if (decoration !== null) {\n    decoration.className = '';\n  } else {\n    decoration = document.createElement('linter-decoration');\n    element.appendChild(decoration);\n  }\n\n  if (highlights.error) {\n    decoration.classList.add('linter-error');\n  } else if (highlights.warning) {\n    decoration.classList.add('linter-warning');\n  } else if (highlights.info) {\n    decoration.classList.add('linter-info');\n  }\n}\n\nfunction removeDecoration(element: HTMLElement) {\n  element.querySelector('linter-decoration')?.remove();\n}","import LinterUI from './main';\nimport type Intentions from './intentions';\nimport type {\n/* IntentionsListProvider, */\nPackageExtra } from './types';\nimport type { StatusBar as StatusBarRegistry } from 'atom/status-bar';\nimport type { BusySignalRegistry } from 'atom-ide-base';\nconst idleCallbacks: Set<IdleCallbackHandle> = new Set();\nconst instances: Set<LinterUI> = new Set();\nlet signalRegistry: BusySignalRegistry | undefined;\nlet statusBarRegistry: StatusBarRegistry | undefined;\nexport function activate() {\n  if ((atom.config.get('linter-ui-default.useBusySignal') as boolean)) {\n    // This is a necessary evil, see steelbrain/linter#1355\n    ;\n    (atom.packages.getLoadedPackage('linter-ui-default') as PackageExtra).metadata['package-deps'].push('busy-signal');\n  }\n\n  const callbackID = window.requestIdleCallback(function installLinterUIDefaultDeps() {\n    idleCallbacks.delete(callbackID);\n\n    if (!atom.inSpecMode()) {\n      const {\n        install\n      } = require('atom-package-deps');\n\n      install('linter-ui-default');\n    }\n  });\n  idleCallbacks.add(callbackID);\n}\nexport function deactivate() {\n  idleCallbacks.forEach(callbackID => window.cancelIdleCallback(callbackID));\n  idleCallbacks.clear();\n\n  for (const entry of instances) {\n    entry.dispose();\n  }\n\n  instances.clear();\n}\nexport function provideUI(): LinterUI {\n  const instance = new LinterUI();\n  instances.add(instance);\n\n  if (signalRegistry) {\n    instance.signal.attach(signalRegistry);\n  }\n\n  return instance;\n} // TODO: use IntentionsListProvider as the return type\n\nexport function provideIntentions(): Array<Intentions> {\n  return Array.from(instances).map(entry => entry.intentions);\n}\nexport function consumeSignal(signalService: BusySignalRegistry) {\n  signalRegistry = signalService;\n  instances.forEach(function (instance) {\n    instance.signal.attach((signalRegistry as BusySignalRegistry));\n  });\n}\nexport function consumeStatusBar(statusBarService: StatusBarRegistry) {\n  statusBarRegistry = statusBarService;\n  instances.forEach(function (instance) {\n    instance.statusBar.attach((statusBarRegistry as StatusBarRegistry));\n  });\n}","import { CompositeDisposable, Disposable, Emitter, Range } from 'atom';\nimport { getActiveTextEditor, filterMessages, filterMessagesByRangeOrPoint } from '../helpers';\nimport type { LinterMessage } from '../types';\nexport default class PanelDelegate {\n  emitter = new Emitter<{}, {\n    'observe-messages': Array<LinterMessage>;\n  }>(); // eslint-disable-line @typescript-eslint/ban-types\n\n  messages: Array<LinterMessage> = [];\n  filteredMessages: Array<LinterMessage> = [];\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  panelRepresents?: 'Entire Project' | 'Current File' | 'Current Line';\n\n  constructor() {\n    let changeSubscription: Disposable | null = null;\n    this.subscriptions.add(atom.config.observe('linter-ui-default.panelRepresents', panelRepresents => {\n      const notInitial = typeof this.panelRepresents !== 'undefined';\n      this.panelRepresents = panelRepresents;\n\n      if (notInitial) {\n        this.update();\n      }\n    }), atom.workspace.getCenter().observeActivePaneItem(() => {\n      if (changeSubscription) {\n        changeSubscription.dispose();\n        changeSubscription = null;\n      }\n\n      const textEditor = getActiveTextEditor();\n\n      if (textEditor) {\n        if (this.panelRepresents !== 'Entire Project') {\n          this.update();\n        }\n\n        let oldRow = -1;\n        changeSubscription = textEditor.onDidChangeCursorPosition(({\n          newBufferPosition\n        }) => {\n          if (oldRow !== newBufferPosition.row && this.panelRepresents === 'Current Line') {\n            oldRow = newBufferPosition.row;\n            this.update();\n          }\n        });\n      }\n\n      if (this.panelRepresents !== 'Entire Project' || textEditor) {\n        this.update();\n      }\n    }), new Disposable(function () {\n      if (changeSubscription) {\n        changeSubscription.dispose();\n      }\n    }));\n  }\n\n  getFilteredMessages(): Array<LinterMessage> {\n    let filteredMessages: Array<LinterMessage> = [];\n\n    if (this.panelRepresents === 'Entire Project') {\n      filteredMessages = this.messages;\n    } else if (this.panelRepresents === 'Current File') {\n      const activeEditor = getActiveTextEditor();\n\n      if (!activeEditor) {\n        return [];\n      }\n\n      filteredMessages = filterMessages(this.messages, activeEditor.getPath());\n    } else if (this.panelRepresents === 'Current Line') {\n      const activeEditor = getActiveTextEditor();\n\n      if (!activeEditor) {\n        return [];\n      }\n\n      const activeLine = activeEditor.getCursors()[0].getBufferRow();\n      filteredMessages = filterMessagesByRangeOrPoint(this.messages, activeEditor.getPath(), Range.fromObject([[activeLine, 0], [activeLine, Infinity]]));\n    }\n\n    return filteredMessages;\n  }\n\n  update(messages: Array<LinterMessage> | null | undefined = null): void {\n    if (Array.isArray(messages)) {\n      this.messages = messages;\n    }\n\n    this.filteredMessages = this.getFilteredMessages();\n    this.emitter.emit('observe-messages', this.filteredMessages);\n  }\n\n  onDidChangeMessages(callback: (messages: Array<LinterMessage>) => void): Disposable {\n    return this.emitter.on('observe-messages', callback);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import { CompositeDisposable } from 'atom';\nimport Delegate from './delegate';\nimport PanelDock from './dock';\nimport type { LinterMessage } from '../types';\nimport type { PaneContainer } from './dock';\nexport default class Panel {\n  panel: PanelDock | null = null;\n  element: HTMLElement = document.createElement('div');\n  delegate: Delegate = new Delegate();\n  messages: Array<LinterMessage> = [];\n  deactivating: boolean = false;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  showPanelConfig: boolean = true;\n  hidePanelWhenEmpty: boolean = true;\n  showPanelStateMessages: boolean = false;\n  activationTimer: number;\n\n  constructor() {\n    this.subscriptions.add(this.delegate, atom.config.observe('linter-ui-default.hidePanelWhenEmpty', async (hidePanelWhenEmpty: boolean) => {\n      this.hidePanelWhenEmpty = hidePanelWhenEmpty;\n      await this.refresh();\n    }), atom.workspace.onDidDestroyPane(({\n      pane: destroyedPane\n    }) => {\n      const isPaneItemDestroyed = this.panel !== null ? destroyedPane.getItems().includes(this.panel) : true;\n\n      if (isPaneItemDestroyed && !this.deactivating) {\n        this.panel = null;\n        atom.config.set('linter-ui-default.showPanel', false);\n      }\n    }), atom.workspace.onDidDestroyPaneItem(({\n      item: paneItem\n    }) => {\n      if (paneItem instanceof PanelDock && !this.deactivating) {\n        this.panel = null;\n        atom.config.set('linter-ui-default.showPanel', false);\n      }\n    }), atom.config.observe('linter-ui-default.showPanel', async (showPanel: boolean) => {\n      this.showPanelConfig = showPanel;\n      await this.refresh();\n    }), atom.workspace.getCenter().observeActivePaneItem(async () => {\n      this.showPanelStateMessages = Boolean(this.delegate.filteredMessages.length);\n      await this.refresh();\n    }));\n    this.activationTimer = window.requestIdleCallback(async () => {\n      let firstTime = true;\n      const dock = atom.workspace.getBottomDock();\n      this.subscriptions.add(dock.onDidChangeActivePaneItem(paneItem => {\n        if (!this.panel || this.getPanelLocation() !== 'bottom') {\n          return;\n        }\n\n        if (firstTime) {\n          firstTime = false;\n          return;\n        }\n\n        const isFocusIn = paneItem === this.panel;\n        const externallyToggled = isFocusIn !== this.showPanelConfig;\n\n        if (externallyToggled) {\n          atom.config.set('linter-ui-default.showPanel', !this.showPanelConfig);\n        }\n      }), dock.onDidChangeVisible(visible => {\n        if (!this.panel || this.getPanelLocation() !== 'bottom') {\n          return;\n        }\n\n        if (!visible) {\n          // ^ When it's time to tell config to hide\n          if (this.showPanelConfig && this.hidePanelWhenEmpty && !this.showPanelStateMessages) {\n            // Ignore because we just don't have any messages to show, everything else is fine\n            return;\n          }\n        }\n\n        if (dock.getActivePaneItem() !== this.panel) {\n          // Ignore since the visibility of this panel is not changing\n          return;\n        }\n\n        const externallyToggled = visible !== this.showPanelConfig;\n\n        if (externallyToggled) {\n          atom.config.set('linter-ui-default.showPanel', !this.showPanelConfig);\n        }\n      }));\n      await this.activate();\n    });\n  }\n\n  private getPanelLocation() {\n    if (!this.panel) {\n      return null;\n    } // @ts-ignore internal API\n\n\n    const paneContainer: PaneContainer | undefined = atom.workspace.paneContainerForItem(this.panel);\n    return paneContainer?.location;\n  }\n\n  async activate() {\n    if (this.panel) {\n      return;\n    }\n\n    this.panel = new PanelDock(this.delegate);\n    await atom.workspace.open(this.panel, {\n      activatePane: false,\n      activateItem: false,\n      searchAllPanes: true\n    });\n    await this.update();\n    await this.refresh();\n  }\n\n  async update(newMessages: Array<LinterMessage> | null | undefined = null) {\n    if (newMessages) {\n      this.messages = newMessages;\n    }\n\n    this.delegate.update(this.messages);\n    this.showPanelStateMessages = Boolean(this.delegate.filteredMessages.length);\n    await this.refresh();\n  }\n\n  async refresh() {\n    const panel = this.panel;\n\n    if (panel === null) {\n      if (this.showPanelConfig) {\n        await this.activate();\n      }\n\n      return;\n    } // @ts-ignore internal API\n\n\n    const paneContainer: PaneContainer | undefined = atom.workspace.paneContainerForItem(panel);\n\n    if (paneContainer?.location !== 'bottom') {\n      return;\n    }\n\n    const isActivePanel = paneContainer.getActivePaneItem() === panel;\n    const visibilityAllowed1 = this.showPanelConfig;\n    const visibilityAllowed2 = this.hidePanelWhenEmpty ? this.showPanelStateMessages : true;\n\n    if (visibilityAllowed1 && visibilityAllowed2) {\n      if (!isActivePanel) {\n        paneContainer.paneForItem(panel)?.activateItem(panel);\n      }\n\n      paneContainer.show();\n      panel.doPanelResize();\n    } else if (isActivePanel) {\n      paneContainer.hide();\n    }\n  }\n\n  dispose() {\n    this.deactivating = true;\n\n    if (this.panel) {\n      this.panel.dispose();\n    }\n\n    this.subscriptions.dispose();\n    window.cancelIdleCallback(this.activationTimer);\n  }\n\n}","import invariant from 'assert';\nimport { CompositeDisposable } from 'atom';\nimport { $file, $range, getActiveTextEditor, visitMessage, sortMessages, sortSolutions, filterMessages, applySolution } from './helpers';\nimport type { LinterMessage, Message } from './types';\nexport default class Commands {\n  messages: Array<LinterMessage> = [];\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    this.subscriptions.add(atom.commands.add('atom-workspace', {\n      'linter-ui-default:next': () => this.move(true, true),\n      'linter-ui-default:previous': () => this.move(false, true),\n      'linter-ui-default:next-error': () => this.move(true, true, 'error'),\n      'linter-ui-default:previous-error': () => this.move(false, true, 'error'),\n      'linter-ui-default:next-warning': () => this.move(true, true, 'warning'),\n      'linter-ui-default:previous-warning': () => this.move(false, true, 'warning'),\n      'linter-ui-default:next-info': () => this.move(true, true, 'info'),\n      'linter-ui-default:previous-info': () => this.move(false, true, 'info'),\n      'linter-ui-default:next-in-current-file': () => this.move(true, false),\n      'linter-ui-default:previous-in-current-file': () => this.move(false, false),\n      'linter-ui-default:next-error-in-current-file': () => this.move(true, false, 'error'),\n      'linter-ui-default:previous-error-in-current-file': () => this.move(false, false, 'error'),\n      'linter-ui-default:next-warning-in-current-file': () => this.move(true, false, 'warning'),\n      'linter-ui-default:previous-warning-in-current-file': () => this.move(false, false, 'warning'),\n      'linter-ui-default:next-info-in-current-file': () => this.move(true, false, 'info'),\n      'linter-ui-default:previous-info-in-current-file': () => this.move(false, false, 'info'),\n      'linter-ui-default:toggle-panel': () => togglePanel(),\n\n      // NOTE: Add no-ops here so they are recognized by commands registry\n      // Real commands are registered when tooltip is shown inside tooltip's delegate\n      'linter-ui-default:expand-tooltip'() {\n        /* no operation */\n      },\n\n      'linter-ui-default:collapse-tooltip'() {\n        /* no operation */\n      }\n\n    }), atom.commands.add('atom-text-editor:not([mini])', {\n      'linter-ui-default:apply-all-solutions': () => this.applyAllSolutions()\n    }), atom.commands.add('#linter-panel', {\n      'core:copy': () => {\n        const selection = document.getSelection();\n\n        if (selection) {\n          atom.clipboard.write(selection.toString());\n        }\n      }\n    }));\n  } // NOTE: Apply solutions from bottom to top, so they don't invalidate each other\n  // NOTE: This only apply the solutions that are not async\n\n\n  applyAllSolutions(): void {\n    const textEditor = getActiveTextEditor();\n    invariant(textEditor, 'textEditor was null on a command supposed to run on text-editors only');\n    const messages = sortMessages(filterMessages(this.messages, textEditor.getPath()), ['line', 'desc']);\n    messages.forEach(function (message) {\n      if (message.version === 2 && Array.isArray(message.solutions) && message.solutions.length > 0) {\n        applySolution(textEditor, sortSolutions(message.solutions)[0]);\n      }\n    });\n  }\n\n  async move(forward: boolean, globally: boolean, severity: string | null | undefined = null) {\n    const currentEditor = getActiveTextEditor();\n    const currentFile: any = currentEditor?.getPath() ?? NaN; // NOTE: ^ Setting default to NaN so it won't match empty file paths in messages\n\n    const messages = sortMessages(filterMessages(this.messages, globally ? null : currentFile, severity), ['file', 'asc']);\n    const expectedValue = forward ? -1 : 1;\n\n    if (!currentEditor) {\n      const message = forward ? messages[0] : messages[messages.length - 1];\n\n      if (message) {\n        await visitMessage(message);\n      }\n\n      return;\n    }\n\n    const currentPosition = currentEditor.getCursorBufferPosition(); // NOTE: Iterate bottom to top to find the previous message\n    // Because if we search top to bottom when sorted, first item will always\n    // be the smallest\n\n    if (!forward) {\n      messages.reverse();\n    }\n\n    let found: Message | null = null;\n    let currentFileEncountered = false;\n\n    for (let i = 0, length = messages.length; i < length; i++) {\n      const message = messages[i];\n      const messageFile = $file(message);\n      const messageRange = $range(message);\n\n      if (!currentFileEncountered && messageFile === currentFile) {\n        currentFileEncountered = true;\n      }\n\n      if (typeof messageFile === 'string' && messageRange) {\n        if (currentFileEncountered && messageFile !== currentFile) {\n          found = message;\n          break;\n        } else if (messageFile === currentFile && currentPosition.compare(messageRange.start) === expectedValue) {\n          found = message;\n          break;\n        }\n      }\n    }\n\n    if (!found && messages.length) {\n      // Reset back to first or last depending on direction\n      found = messages[0];\n    }\n\n    if (found) {\n      await visitMessage(found);\n    }\n  }\n\n  update(messages: Array<LinterMessage>) {\n    this.messages = messages;\n  }\n\n  dispose(): void {\n    this.subscriptions.dispose();\n  }\n\n}\n\nfunction togglePanel(): void {\n  atom.config.set('linter-ui-default.showPanel', !(atom.config.get('linter-ui-default.showPanel') as boolean));\n}","import { CompositeDisposable, Emitter } from 'atom';\nimport type { Disposable } from 'atom';\nimport * as Helpers from './helpers';\nexport default class Element {\n  item: HTMLElement = document.createElement('div');\n  itemErrors: HTMLElement = Helpers.getElement('stop');\n  itemWarnings: HTMLElement = Helpers.getElement('alert');\n  itemInfos: HTMLElement = Helpers.getElement('info');\n  emitter = new Emitter<{}, {\n    click: 'error' | 'warning' | 'info';\n  }>(); // eslint-disable-line @typescript-eslint/ban-types\n\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    this.item.appendChild(this.itemErrors);\n    this.item.appendChild(this.itemWarnings);\n    this.item.appendChild(this.itemInfos);\n    this.item.classList.add('inline-block');\n    this.item.classList.add('linter-status-count');\n    this.subscriptions.add(this.emitter, atom.tooltips.add(this.itemErrors, {\n      title: 'Linter Errors'\n    }), atom.tooltips.add(this.itemWarnings, {\n      title: 'Linter Warnings'\n    }), atom.tooltips.add(this.itemInfos, {\n      title: 'Linter Infos'\n    }));\n\n    this.itemErrors.onclick = () => this.emitter.emit('click', 'error');\n\n    this.itemWarnings.onclick = () => this.emitter.emit('click', 'warning');\n\n    this.itemInfos.onclick = () => this.emitter.emit('click', 'info');\n\n    this.update(0, 0, 0);\n  }\n\n  setVisibility(prefix: string, visibility: boolean) {\n    if (visibility) {\n      this.item.classList.remove(`hide-${prefix}`);\n    } else {\n      this.item.classList.add(`hide-${prefix}`);\n    }\n  }\n\n  update(countErrors: number, countWarnings: number, countInfos: number): void {\n    this.itemErrors.childNodes[0].textContent = String(countErrors);\n    this.itemWarnings.childNodes[0].textContent = String(countWarnings);\n    this.itemInfos.childNodes[0].textContent = String(countInfos);\n\n    if (countErrors) {\n      this.itemErrors.classList.add('text-error');\n    } else {\n      this.itemErrors.classList.remove('text-error');\n    }\n\n    if (countWarnings) {\n      this.itemWarnings.classList.add('text-warning');\n    } else {\n      this.itemWarnings.classList.remove('text-warning');\n    }\n\n    if (countInfos) {\n      this.itemInfos.classList.add('text-info');\n    } else {\n      this.itemInfos.classList.remove('text-info');\n    }\n  }\n\n  onDidClick(callback: (type: 'error' | 'warning' | 'info') => void): Disposable {\n    return this.emitter.on('click', callback);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import { CompositeDisposable, Disposable } from 'atom';\nimport type { StatusBar as StatusBarRegistry, Tile as StatusBarTile } from 'atom/status-bar';\nimport Element from './element';\nimport { $file, getActiveTextEditor } from '../helpers';\nimport type { LinterMessage } from '../types';\nexport default class StatusBar {\n  element: Element = new Element();\n  messages: Array<LinterMessage> = [];\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  statusBarRepresents?: 'Entire Project' | 'Current File';\n  statusBarClickBehavior?: 'Toggle Panel' | 'Jump to next issue' | 'Toggle Status Bar Scope';\n\n  constructor() {\n    this.subscriptions.add(this.element, atom.config.observe('linter-ui-default.statusBarRepresents', (statusBarRepresents: StatusBar['statusBarRepresents']) => {\n      const notInitial = typeof this.statusBarRepresents !== 'undefined';\n      this.statusBarRepresents = statusBarRepresents;\n\n      if (notInitial) {\n        this.update();\n      }\n    }), atom.config.observe('linter-ui-default.statusBarClickBehavior', (statusBarClickBehavior: StatusBar['statusBarClickBehavior']) => {\n      const notInitial = typeof this.statusBarClickBehavior !== 'undefined';\n      this.statusBarClickBehavior = statusBarClickBehavior;\n\n      if (notInitial) {\n        this.update();\n      }\n    }), atom.config.observe('linter-ui-default.showStatusBar', (showStatusBar: boolean) => {\n      this.element.setVisibility('config', showStatusBar);\n    }), atom.workspace.getCenter().observeActivePaneItem(paneItem => {\n      const isTextEditor = atom.workspace.isTextEditor(paneItem);\n      this.element.setVisibility('pane', isTextEditor);\n\n      if (isTextEditor && this.statusBarRepresents === 'Current File') {\n        this.update();\n      }\n    }));\n    this.element.onDidClick(async type => {\n      const workspaceView = atom.views.getView(atom.workspace);\n\n      if (this.statusBarClickBehavior === 'Toggle Panel') {\n        await atom.commands.dispatch(workspaceView, 'linter-ui-default:toggle-panel');\n      } else if (this.statusBarClickBehavior === 'Toggle Status Bar Scope') {\n        atom.config.set('linter-ui-default.statusBarRepresents', this.statusBarRepresents === 'Entire Project' ? 'Current File' : 'Entire Project');\n      } else {\n        const postfix = this.statusBarRepresents === 'Current File' ? '-in-current-file' : '';\n        await atom.commands.dispatch(workspaceView, `linter-ui-default:next-${type}${postfix}`);\n      }\n    });\n  }\n\n  update(messages?: Array<LinterMessage>): void {\n    if (messages !== undefined) {\n      this.messages = messages;\n    } else {\n      messages = this.messages;\n    }\n\n    const count = {\n      error: 0,\n      warning: 0,\n      info: 0\n    };\n    const currentTextEditor = getActiveTextEditor();\n    const currentPath = currentTextEditor?.getPath() ?? NaN; // NOTE: ^ Setting default to NaN so it won't match empty file paths in messages\n\n    messages.forEach(message => {\n      if (this.statusBarRepresents === 'Entire Project' || $file(message) === currentPath) {\n        if (message.severity === 'error') {\n          count.error++;\n        } else if (message.severity === 'warning') {\n          count.warning++;\n        } else {\n          count.info++;\n        }\n      }\n    });\n    this.element.update(count.error, count.warning, count.info);\n  }\n\n  attach(statusBarRegistry: StatusBarRegistry) {\n    let statusBar: StatusBarTile | null = null;\n    this.subscriptions.add(atom.config.observe('linter-ui-default.statusBarPosition', statusBarPosition => {\n      if (statusBar) {\n        statusBar.destroy();\n      }\n\n      statusBar = statusBarRegistry[`add${statusBarPosition}Tile`]({\n        item: this.element.item,\n        priority: statusBarPosition === 'Left' ? 0 : 1000\n      });\n    }));\n    this.subscriptions.add(new Disposable(function () {\n      if (statusBar) {\n        statusBar.destroy();\n      }\n    }));\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import { CompositeDisposable } from 'atom';\nimport type { Linter } from './types';\nimport { BusySignalProvider, BusySignalRegistry } from 'atom-ide-base';\nexport default class BusySignal {\n  provider: BusySignalProvider | null | undefined;\n  executing: Set<{\n    linter: Linter;\n    filePath: string | null | undefined;\n  }> = new Set();\n  providerTitles: Set<string> = new Set();\n  useBusySignal: boolean = true;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    this.subscriptions.add(atom.config.observe('linter-ui-default.useBusySignal', useBusySignal => {\n      this.useBusySignal = useBusySignal;\n    }));\n  }\n\n  attach(registry: BusySignalRegistry) {\n    this.provider = registry.create();\n    this.update();\n  }\n\n  update() {\n    const provider = this.provider;\n\n    if (!provider) {\n      return;\n    }\n\n    if (!this.useBusySignal) {\n      return;\n    }\n\n    const fileMap: Map<string | null | undefined, Array<string>> = new Map();\n    const currentTitles = new Set();\n\n    for (const {\n      filePath,\n      linter\n    } of this.executing) {\n      let names = fileMap.get(filePath);\n\n      if (!names) {\n        fileMap.set(filePath, names = []);\n      }\n\n      names.push(linter.name);\n    }\n\n    for (const [filePath, names] of fileMap) {\n      const path = typeof filePath === 'string' ? ` on ${atom.project.relativizePath(filePath)[1]}` : '';\n      names.forEach(name => {\n        const title = `${name}${path}`;\n        currentTitles.add(title);\n\n        if (!this.providerTitles.has(title)) {\n          // Add the title since it hasn't been seen before\n          this.providerTitles.add(title);\n          provider.add(title);\n        }\n      });\n    } // Remove any titles no longer active\n\n\n    this.providerTitles.forEach(title => {\n      if (!currentTitles.has(title)) {\n        provider.remove(title);\n        this.providerTitles.delete(title);\n      }\n    });\n    fileMap.clear();\n  }\n\n  getExecuting(linter: Linter, filePath: string | null | undefined) {\n    for (const entry of this.executing) {\n      if (entry.linter === linter && entry.filePath === filePath) {\n        return entry;\n      }\n    }\n\n    return null;\n  }\n\n  didBeginLinting(linter: Linter, filePath: string | null | undefined) {\n    if (this.getExecuting(linter, filePath)) {\n      return;\n    }\n\n    this.executing.add({\n      linter,\n      filePath\n    });\n    this.update();\n  }\n\n  didFinishLinting(linter: Linter, filePath: string | null | undefined) {\n    const entry = this.getExecuting(linter, filePath);\n\n    if (entry) {\n      this.executing.delete(entry);\n      this.update();\n    }\n  }\n\n  dispose() {\n    if (this.provider) {\n      this.provider.clear();\n    }\n\n    this.providerTitles.clear();\n    this.executing.clear();\n    this.subscriptions.dispose();\n  }\n\n}","import { $range, applySolution, filterMessages } from './helpers';\nimport type { LinterMessage, ListItem, MessageSolution } from './types';\nimport type { TextEditor, Point } from 'atom';\nexport default class Intentions {\n  messages: Array<LinterMessage> = [];\n  grammarScopes: Array<string> = ['*'];\n\n  getIntentions({\n    textEditor,\n    bufferPosition\n  }: {\n    textEditor: TextEditor;\n    bufferPosition: Point;\n  }) {\n    let intentions: ListItem[] = [];\n    const messages = filterMessages(this.messages, textEditor.getPath());\n\n    for (const message of messages) {\n      const messageSolutions = message.solutions;\n      const hasArrayFixes = Array.isArray(messageSolutions) && messageSolutions.length > 0;\n\n      if (!hasArrayFixes && typeof messageSolutions !== 'function') {\n        // if it doesn't have solutions then continue\n        continue;\n      }\n\n      const range = $range(message);\n\n      if (range?.containsPoint(bufferPosition) !== true) {\n        // if not in range then continue\n        continue;\n      }\n\n      const linterName = message.linterName || 'Linter';\n\n      if (message.version === 2) {\n        if (hasArrayFixes) {\n          intentions = intentions.concat((messageSolutions as MessageSolution[]).map(solution => ({\n            priority: typeof solution.priority === 'number' ? solution.priority + 200 : 200,\n            icon: 'tools',\n            title: solution.title ?? `Fix ${linterName} issue`,\n\n            selected() {\n              applySolution(textEditor, solution);\n            }\n\n          })));\n        }\n      }\n    }\n\n    return intentions;\n  }\n\n  update(messages: Array<LinterMessage>) {\n    this.messages = messages;\n  }\n\n}","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","import { CompositeDisposable, Emitter } from 'atom';\nimport type { Disposable } from 'atom';\nimport { CommandEventExtra } from '../types';\nexport default class TooltipDelegate {\n  emitter: Emitter = new Emitter<{\n    'should-update': never;\n    'should-expand': never;\n    'should-collapse': never;\n  }>();\n  expanded: boolean = false;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  showProviderName?: boolean;\n\n  constructor() {\n    this.subscriptions.add(this.emitter, atom.config.observe('linter-ui-default.showProviderName', showProviderName => {\n      const shouldUpdate = typeof this.showProviderName !== 'undefined';\n      this.showProviderName = showProviderName;\n\n      if (shouldUpdate) {\n        this.emitter.emit('should-update');\n      }\n    }), atom.commands.add('atom-workspace', {\n      'linter-ui-default:expand-tooltip': (event: CommandEventExtra) => {\n        if (this.expanded) {\n          return;\n        }\n\n        this.expanded = true;\n        this.emitter.emit('should-expand'); // If bound to a key, collapse when that key is released, just like old times\n\n        if (event.originalEvent?.isTrusted === true) {\n          // $FlowIgnore: document.body is never null\n          document.body.addEventListener('keyup', async function eventListener() {\n            // $FlowIgnore: document.body is never null\n            document.body.removeEventListener('keyup', eventListener);\n            await atom.commands.dispatch(atom.views.getView(atom.workspace), 'linter-ui-default:collapse-tooltip');\n          }, {\n            passive: true\n          });\n        }\n      },\n      'linter-ui-default:collapse-tooltip': () => {\n        this.expanded = false;\n        this.emitter.emit('should-collapse');\n      }\n    }));\n  }\n\n  onShouldUpdate(callback: () => void): Disposable {\n    return this.emitter.on('should-update', callback);\n  }\n\n  onShouldExpand(callback: () => void): Disposable {\n    return this.emitter.on('should-expand', callback);\n  }\n\n  onShouldCollapse(callback: () => void): Disposable {\n    return this.emitter.on('should-collapse', callback);\n  }\n\n  dispose() {\n    this.emitter.dispose();\n  }\n\n}","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nmodule.exports = before;\n","var before = require('./before');\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nmodule.exports = once;\n","module.exports = (Promise.resolve(__parcel__require__(\"./\" + \"marked.esm.171c7c5e.js\"))).then(() => parcelRequire('kt143'));","import debounce from 'lodash/debounce';\nimport disposableEvent from 'disposable-event';\nimport { TargetWithAddEventListener } from 'disposable-event/src/target';\nimport { CompositeDisposable, Disposable, Emitter, Range, CursorPositionChangedEvent } from 'atom';\ntype CompositeDisposableType = CompositeDisposable & {\n  disposed: boolean;\n}; // $FlowIgnore: Cursor is a type\n\nimport type { TextEditor, DisplayMarker, Marker, Gutter, Point, Cursor } from 'atom';\nimport Tooltip from '../tooltip';\nimport { $range, filterMessagesByRangeOrPoint } from '../helpers';\nimport { hasParent, mouseEventNearPosition, getBufferPositionFromMouseEvent } from './helpers';\nimport type { LinterMessage } from '../types';\nexport default class Editor {\n  textEditor: TextEditor;\n  gutter: Gutter | null = null;\n  tooltip: Tooltip | null = null;\n  emitter = new Emitter<{\n    'did-destroy': never;\n  }>();\n  markers = new Map<string, Array<DisplayMarker | Marker>>();\n  messages = new Map<string, LinterMessage>();\n  showTooltip: boolean = true;\n  subscriptions = (new CompositeDisposable() as CompositeDisposableType);\n  cursorPosition: Point | null = null;\n  gutterPosition?: string;\n  tooltipFollows: string = 'Both';\n  showDecorations?: boolean;\n  showProviderName: boolean = true;\n  ignoreTooltipInvocation: boolean = false;\n  currentLineMarker: DisplayMarker | null = null;\n  lastRange?: Range;\n  lastIsEmpty?: boolean;\n  lastCursorPositions = new WeakMap<Cursor, Point>();\n\n  constructor(textEditor: TextEditor) {\n    this.textEditor = textEditor;\n    let tooltipSubscription: CompositeDisposable | null = null;\n    this.subscriptions.add(this.emitter, textEditor.onDidDestroy(() => {\n      this.dispose();\n    }), new Disposable(function () {\n      tooltipSubscription?.dispose();\n    }), // configs\n    atom.config.observe('linter-ui-default.showProviderName', showProviderName => {\n      this.showProviderName = showProviderName;\n    }), atom.config.observe('linter-ui-default.showDecorations', showDecorations => {\n      const notInitial = typeof this.showDecorations !== 'undefined';\n      this.showDecorations = showDecorations;\n\n      if (notInitial) {\n        this.updateGutter();\n      }\n    }), // gutter config\n    atom.config.observe('linter-ui-default.gutterPosition', gutterPosition => {\n      const notInitial = typeof this.gutterPosition !== 'undefined';\n      this.gutterPosition = gutterPosition;\n\n      if (notInitial) {\n        this.updateGutter();\n      }\n    }), // tooltip config\n    atom.config.observe('linter-ui-default.showTooltip', showTooltip => {\n      this.showTooltip = showTooltip;\n\n      if (!this.showTooltip && this.tooltip) {\n        this.removeTooltip();\n      }\n    }), atom.config.observe('linter-ui-default.tooltipFollows', tooltipFollows => {\n      this.tooltipFollows = tooltipFollows;\n\n      if (tooltipSubscription) {\n        tooltipSubscription.dispose();\n      }\n\n      tooltipSubscription = new CompositeDisposable();\n\n      if (tooltipFollows === 'Mouse' || tooltipFollows === 'Both') {\n        tooltipSubscription.add(this.listenForMouseMovement());\n      }\n\n      if (tooltipFollows === 'Keyboard' || tooltipFollows === 'Both') {\n        tooltipSubscription.add(this.listenForKeyboardMovement());\n      }\n\n      this.removeTooltip();\n    }), // cursor position change\n    textEditor.onDidChangeCursorPosition(({\n      cursor,\n      newBufferPosition\n    }) => {\n      const lastBufferPosition = this.lastCursorPositions.get(cursor);\n\n      if (!lastBufferPosition || !lastBufferPosition.isEqual(newBufferPosition)) {\n        this.lastCursorPositions.set(cursor, newBufferPosition);\n        this.ignoreTooltipInvocation = false;\n      }\n\n      if (this.tooltipFollows === 'Mouse') {\n        this.removeTooltip();\n      }\n    }), // text change\n    textEditor.getBuffer().onDidChangeText(() => {\n      const cursors = textEditor.getCursors();\n      cursors.forEach(cursor => {\n        this.lastCursorPositions.set(cursor, cursor.getBufferPosition());\n      });\n\n      if (this.tooltipFollows !== 'Mouse') {\n        this.ignoreTooltipInvocation = true;\n        this.removeTooltip();\n      }\n    }));\n    this.updateGutter();\n    this.listenForCurrentLine();\n  }\n\n  listenForCurrentLine() {\n    this.subscriptions.add(this.textEditor.observeCursors(cursor => {\n      const handlePositionChange = ({\n        start,\n        end\n      }: {\n        start: Point;\n        end: Point;\n      }) => {\n        const gutter = this.gutter;\n\n        if (!gutter || this.subscriptions.disposed) {\n          return;\n        } // We need that Range.fromObject hack below because when we focus index 0 on multi-line selection\n        // end.column is the column of the last line but making a range out of two and then accesing\n        // the end seems to fix it (black magic?)\n\n\n        const currentRange = Range.fromObject([start, end]);\n        const linesRange = Range.fromObject([[start.row, 0], [end.row, Infinity]]);\n        const currentIsEmpty = currentRange.isEmpty(); // NOTE: Atom does not paint gutter if multi-line and last line has zero index\n\n        if (start.row !== end.row && currentRange.end.column === 0) {\n          linesRange.end.row--;\n        }\n\n        if (this.lastRange?.isEqual(linesRange) === true && currentIsEmpty === this.lastIsEmpty) {\n          return;\n        }\n\n        if (this.currentLineMarker) {\n          this.currentLineMarker.destroy();\n          this.currentLineMarker = null;\n        }\n\n        this.lastRange = linesRange;\n        this.lastIsEmpty = currentIsEmpty;\n        this.currentLineMarker = this.textEditor.markScreenRange(linesRange, {\n          invalidate: 'never'\n        });\n        const item = document.createElement('span');\n        item.className = `line-number cursor-line linter-cursor-line ${currentIsEmpty ? 'cursor-line-no-selection' : ''}`;\n        gutter.decorateMarker(this.currentLineMarker, {\n          item,\n          class: 'linter-row'\n        });\n      };\n\n      const cursorMarker = cursor.getMarker();\n      const subscriptions = new CompositeDisposable();\n      subscriptions.add(cursorMarker.onDidChange(({\n        newHeadScreenPosition,\n        newTailScreenPosition\n      }) => {\n        handlePositionChange({\n          start: newHeadScreenPosition,\n          end: newTailScreenPosition\n        });\n      }), cursor.onDidDestroy(() => {\n        this.subscriptions.remove(subscriptions);\n        subscriptions.dispose();\n      }), new Disposable(() => {\n        if (this.currentLineMarker) {\n          this.currentLineMarker.destroy();\n          this.currentLineMarker = null;\n        }\n      }));\n      this.subscriptions.add(subscriptions);\n      handlePositionChange(cursorMarker.getScreenRange());\n    }));\n  }\n\n  listenForMouseMovement() {\n    const editorElement = atom.views.getView(this.textEditor);\n    return disposableEvent(((editorElement as unknown) as TargetWithAddEventListener), 'mousemove', debounce((event: MouseEvent) => {\n      if (!editorElement.getComponent() || this.subscriptions.disposed || !hasParent((event.target as HTMLElement | null), 'div.scroll-view')) {\n        return;\n      }\n\n      const tooltip = this.tooltip;\n\n      if (tooltip && mouseEventNearPosition({\n        event,\n        editor: this.textEditor,\n        editorElement,\n        tooltipElement: tooltip.element,\n        screenPosition: tooltip.marker.getStartScreenPosition()\n      })) {\n        return;\n      }\n\n      this.cursorPosition = getBufferPositionFromMouseEvent(event, this.textEditor, editorElement);\n      this.ignoreTooltipInvocation = false;\n\n      if (this.cursorPosition) {\n        this.updateTooltip(this.cursorPosition);\n      } else {\n        this.removeTooltip();\n      }\n    }, 100), {\n      passive: true\n    });\n  }\n\n  listenForKeyboardMovement() {\n    return this.textEditor.onDidChangeCursorPosition(debounce(({\n      newBufferPosition\n    }: CursorPositionChangedEvent) => {\n      this.cursorPosition = newBufferPosition;\n      this.updateTooltip(newBufferPosition);\n    }, 16));\n  }\n\n  updateGutter() {\n    this.removeGutter();\n\n    if (this.showDecorations !== true) {\n      this.gutter = null;\n      return;\n    }\n\n    const priority = this.gutterPosition === 'Left' ? -100 : 100;\n    this.gutter = this.textEditor.addGutter({\n      name: 'linter-ui-default',\n      priority\n    });\n    this.markers.forEach((markers, key) => {\n      const message = this.messages.get(key);\n\n      if (message) {\n        for (const marker of markers) {\n          this.decorateMarker(message, marker, 'gutter');\n        }\n      }\n    });\n  }\n\n  removeGutter() {\n    if (this.gutter) {\n      try {\n        this.gutter.destroy();\n      } catch (_) {\n        /* This throws when the text editor is disposed */\n      }\n    }\n  }\n\n  updateTooltip(position: Point | null | undefined) {\n    if (!position || this.tooltip?.isValid(position, this.messages) === true) {\n      return;\n    }\n\n    this.removeTooltip();\n\n    if (!this.showTooltip) {\n      return;\n    }\n\n    if (this.ignoreTooltipInvocation) {\n      return;\n    }\n\n    const messages = filterMessagesByRangeOrPoint(this.messages, this.textEditor.getPath(), position);\n\n    if (!messages.length) {\n      return;\n    }\n\n    this.tooltip = new Tooltip(messages, position, this.textEditor);\n    const tooltipMarker = this.tooltip.marker; // save markers of the tooltip (for destorying them in this.applyChanges)\n\n    messages.forEach(message => {\n      this.saveMarker(message.key, tooltipMarker);\n    }); // $FlowIgnore: this.tooltip is not null\n\n    this.tooltip.onDidDestroy(() => {\n      this.tooltip = null;\n    });\n  }\n\n  removeTooltip() {\n    if (this.tooltip) {\n      this.tooltip.marker.destroy();\n    }\n  }\n\n  applyChanges(added: Array<LinterMessage>, removed: Array<LinterMessage>) {\n    const textBuffer = this.textEditor.getBuffer();\n\n    for (let i = 0, length = removed.length; i < length; i++) {\n      const message = removed[i];\n      this.destroyMarker(message.key);\n    }\n\n    for (let i = 0, length = added.length; i < length; i++) {\n      const message = added[i];\n      const markerRange = $range(message);\n\n      if (!markerRange) {\n        // Only for backward compatibility\n        continue;\n      } // TODO this marker is Marker no DisplayMarker!!\n\n\n      const marker: Marker = textBuffer.markRange(markerRange, {\n        invalidate: 'never'\n      });\n      this.decorateMarker(message, marker);\n      marker.onDidChange(({\n        oldHeadPosition,\n        newHeadPosition,\n        isValid\n      }) => {\n        if (!isValid || newHeadPosition.row === 0 && oldHeadPosition.row !== 0) {\n          return;\n        }\n\n        if (message.version === 2) {\n          message.location.position = marker.previousEventState.range;\n        }\n      });\n    }\n\n    this.updateTooltip(this.cursorPosition);\n  }\n\n  decorateMarker(message: LinterMessage, marker: DisplayMarker | Marker, paint: 'gutter' | 'editor' | 'both' = 'both') {\n    this.saveMarker(message.key, marker);\n    this.messages.set(message.key, message);\n\n    if (paint === 'both' || paint === 'editor') {\n      this.textEditor.decorateMarker(marker, {\n        type: 'text',\n        class: `linter-highlight linter-${message.severity}`\n      });\n    }\n\n    const gutter = this.gutter;\n\n    if (gutter && (paint === 'both' || paint === 'gutter')) {\n      const element = document.createElement('span');\n      element.className = `linter-gutter linter-gutter-${message.severity} icon icon-${message.icon ?? 'primitive-dot'}`;\n      gutter.decorateMarker(marker, {\n        class: 'linter-row',\n        item: element\n      });\n    }\n  } // add marker to the message => marker map\n\n\n  saveMarker(key: string, marker: DisplayMarker | Marker) {\n    const allMarkers = this.markers.get(key) ?? [];\n    allMarkers.push(marker);\n    this.markers.set(key, allMarkers);\n  } // destroy markers of a key\n\n\n  destroyMarker(key: string) {\n    const markers = this.markers.get(key);\n\n    if (markers) {\n      markers.forEach(marker => {\n        marker?.destroy();\n      });\n    }\n\n    this.markers.delete(key);\n    this.messages.delete(key);\n  }\n\n  onDidDestroy(callback: () => void) {\n    return this.emitter.on('did-destroy', callback);\n  }\n\n  dispose() {\n    this.emitter.emit('did-destroy');\n    this.subscriptions.dispose();\n    this.removeGutter();\n    this.removeTooltip();\n  }\n\n}","import type { Point, TextEditor, TextEditorElement, PointLike } from 'atom';\nimport type Tooltip from '../tooltip/index';\nconst TOOLTIP_WIDTH_HIDE_OFFSET = 30;\nexport function getBufferPositionFromMouseEvent(event: MouseEvent, editor: TextEditor, editorElement: TextEditorElement): Point | null {\n  const pixelPosition = editorElement.getComponent().pixelPositionForMouseEvent(event);\n  const screenPosition = editorElement.getComponent().screenPositionForPixelPosition(pixelPosition);\n\n  if (Number.isNaN(screenPosition.row) || Number.isNaN(screenPosition.column)) {\n    return null;\n  } // ^ Workaround for NaN bug steelbrain/linter-ui-default#191\n\n\n  const expectedPixelPosition = editorElement.pixelPositionForScreenPosition(screenPosition);\n  const differenceTop = pixelPosition.top - expectedPixelPosition.top;\n  const differenceLeft = pixelPosition.left - expectedPixelPosition.left; // Only allow offset of 20px - Fixes steelbrain/linter-ui-default#63\n\n  if ((differenceTop === 0 || differenceTop > 0 && differenceTop < 20 || differenceTop < 0 && differenceTop > -20) && (differenceLeft === 0 || differenceLeft > 0 && differenceLeft < 20 || differenceLeft < 0 && differenceLeft > -20)) {\n    return editor.bufferPositionForScreenPosition(screenPosition);\n  }\n\n  return null;\n}\nexport function mouseEventNearPosition({\n  event,\n  editor,\n  editorElement,\n  tooltipElement,\n  screenPosition\n}: {\n  event: {\n    clientX: number;\n    clientY: number;\n  };\n  editor: TextEditor;\n  editorElement: TextEditorElement;\n  tooltipElement: Tooltip['element'];\n  screenPosition: PointLike;\n}): boolean {\n  const pixelPosition = editorElement.getComponent().pixelPositionForMouseEvent(event);\n  const expectedPixelPosition = editorElement.pixelPositionForScreenPosition(screenPosition);\n  const differenceTop = pixelPosition.top - expectedPixelPosition.top;\n  const differenceLeft = pixelPosition.left - expectedPixelPosition.left;\n  const editorLineHeight = editor.getLineHeightInPixels();\n  const elementHeight = tooltipElement.offsetHeight + editorLineHeight;\n  const elementWidth = tooltipElement.offsetWidth;\n\n  if (differenceTop > 0) {\n    // Cursor is below the line\n    if (differenceTop > elementHeight + 1.5 * editorLineHeight) {\n      return false;\n    }\n  } else if (differenceTop < 0) {\n    // Cursor is above the line\n    if (differenceTop < -1.5 * editorLineHeight) {\n      return false;\n    }\n  }\n\n  if (differenceLeft > 0) {\n    // Right of the start of highlight\n    if (differenceLeft > elementWidth + TOOLTIP_WIDTH_HIDE_OFFSET) {\n      return false;\n    }\n  } else if (differenceLeft < 0) {\n    // Left of start of highlight\n    if (differenceLeft < -1 * TOOLTIP_WIDTH_HIDE_OFFSET) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function hasParent(givenElement: HTMLElement | null, selector: string): boolean {\n  let element: HTMLElement | null = givenElement;\n\n  if (element === null) {\n    return false;\n  }\n\n  do {\n    if (element.matches(selector)) {\n      return true;\n    }\n\n    element = element.parentElement;\n  } while (element !== null && element.nodeName !== 'HTML');\n\n  return false;\n}","import { CompositeDisposable } from 'atom';\nimport type { TextEditor } from 'atom';\nimport Editor from './editor';\nimport { $file, getEditorsMap, filterMessages } from './helpers';\nimport { largeness } from 'atom-ide-base/commons-atom/editor-largeness';\nimport type { LinterMessage, MessagesPatch } from './types';\nexport type EditorsPatch = {\n  added: Array<LinterMessage>;\n  removed: Array<LinterMessage>;\n  editors: Array<Editor>;\n};\nexport type EditorsMap = Map<string, EditorsPatch>;\nexport default class Editors {\n  editors: Set<Editor> = new Set();\n  messages: Array<LinterMessage> = [];\n  firstRender: boolean = true;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    // TODO move the config to a separate package\n    const largeLineCount = (atom.config.get('linter-ui-default.largeFileLineCount') as number);\n    const longLineLength = (atom.config.get('linter-ui-default.longLineLength') as number);\n    this.subscriptions.add(atom.workspace.observeTextEditors(textEditor => {\n      // TODO we do this check only at the begining. Probably we should do this later too?\n      if (largeness(textEditor, largeLineCount, longLineLength)) {\n        const notif = atom.notifications.addWarning('Linter: Large/Minified file detected', {\n          detail: 'Adding inline linter markers are skipped for this file for performance reasons (linter pane is still active)',\n          dismissable: true,\n          buttons: [{\n            text: 'Force enable',\n            onDidClick: () => {\n              this.getEditor(textEditor);\n              notif.dismiss();\n            }\n          }, {\n            text: 'Change threshold',\n            onDidClick: async () => {\n              await atom.workspace.open('atom://config/packages/linter-ui-default'); // it is the 16th setting :D\n\n              document.querySelectorAll('.control-group')[16].scrollIntoView();\n              notif.dismiss();\n            }\n          }]\n        });\n        setTimeout(() => {\n          notif.dismiss();\n        }, 5000);\n        return;\n      }\n\n      this.getEditor(textEditor);\n    }), atom.workspace.getCenter().observeActivePaneItem(paneItem => {\n      this.editors.forEach(editor => {\n        if (editor.textEditor !== paneItem) {\n          editor.removeTooltip();\n        }\n      });\n    }));\n  }\n\n  isFirstRender(): boolean {\n    return this.firstRender;\n  }\n\n  update({\n    messages,\n    added,\n    removed\n  }: MessagesPatch) {\n    this.messages = messages;\n    this.firstRender = false;\n    const {\n      editorsMap,\n      filePaths\n    } = getEditorsMap(this);\n    added.forEach(function (message) {\n      if (!message || !message.location) {\n        return;\n      }\n\n      const filePath = $file(message);\n\n      if (typeof filePath === 'string' && editorsMap.has(filePath)) {\n        editorsMap.get(filePath)!.added.push(message);\n      }\n    });\n    removed.forEach(function (message) {\n      if (!message || !message.location) {\n        return;\n      }\n\n      const filePath = $file(message);\n\n      if (typeof filePath === 'string' && editorsMap.has(filePath)) {\n        editorsMap.get(filePath)!.removed.push(message);\n      }\n    });\n    filePaths.forEach(function (filePath) {\n      if (editorsMap.has(filePath)) {\n        const {\n          added,\n          removed,\n          editors\n        } = (editorsMap.get(filePath) as EditorsPatch);\n\n        if (added.length || removed.length) {\n          editors.forEach(editor => editor.applyChanges(added, removed));\n        }\n      }\n    });\n  }\n\n  getEditor(textEditor: TextEditor): Editor | void {\n    for (const entry of this.editors) {\n      if (entry.textEditor === textEditor) {\n        return entry;\n      }\n    }\n\n    const editor = new Editor(textEditor);\n    this.editors.add(editor);\n    editor.onDidDestroy(() => {\n      this.editors.delete(editor);\n    });\n    editor.subscriptions.add(textEditor.onDidChangePath(() => {\n      editor.dispose();\n      this.getEditor(textEditor);\n    }));\n    editor.subscriptions.add(textEditor.onDidChangeGrammar(() => {\n      editor.dispose();\n      this.getEditor(textEditor);\n    }));\n    editor.applyChanges(filterMessages(this.messages, textEditor.getPath()), []);\n    return editor;\n  }\n\n  dispose() {\n    for (const entry of this.editors) {\n      entry.dispose();\n    }\n\n    this.subscriptions.dispose();\n  }\n\n}","import Path from 'path';\nimport { $file } from '../helpers';\nimport type { LinterMessage } from '../types';\nimport type { TreeViewHighlight } from './index';\n\nfunction getChunks(filePath: string, projectPath: string): Array<string> {\n  const toReturn: Array<string> = [];\n  const chunks = filePath.split(Path.sep);\n\n  while (chunks.length) {\n    const currentPath = chunks.join(Path.sep);\n\n    if (currentPath) {\n      // This is required for when you open files outside of project window\n      // and the last entry is '' because unix paths start with /\n      toReturn.push(currentPath);\n\n      if (currentPath === projectPath) {\n        break;\n      }\n    }\n\n    chunks.pop();\n  }\n\n  return toReturn;\n}\n\nfunction getChunksByProjects(filePath: string, projectPaths: Array<string>): Array<string> {\n  const matchingProjectPath = projectPaths.find(p => filePath.startsWith(p));\n\n  if (matchingProjectPath === undefined) {\n    return [filePath];\n  }\n\n  return getChunks(filePath, matchingProjectPath);\n}\n\nfunction mergeChange(change: Record<string, TreeViewHighlight | undefined>, filePath: string, severity: string): void {\n  if (change[filePath] === undefined) {\n    change[filePath] = {\n      info: false,\n      error: false,\n      warning: false\n    };\n  }\n\n  change[filePath]![severity] = true;\n}\n\nexport function calculateDecorations(decorateOnTreeView: 'Files and Directories' | 'Files' | undefined, messages: Array<LinterMessage>): Record<string, TreeViewHighlight | undefined> {\n  const toReturn: Record<string, TreeViewHighlight | undefined> = {};\n  const projectPaths: Array<string> = atom.project.getPaths();\n  messages.forEach(function (message) {\n    const filePath = $file(message);\n\n    if (typeof filePath === 'string') {\n      const chunks = decorateOnTreeView === 'Files' ? [filePath] : getChunksByProjects(filePath, projectPaths);\n      chunks.forEach(chunk => mergeChange(toReturn, chunk, message.severity));\n    }\n  });\n  return toReturn;\n}","import { CompositeDisposable } from 'atom';\nimport Panel from './panel';\nimport Commands from './commands';\nimport StatusBar from './status-bar';\nimport BusySignal from './busy-signal';\nimport Intentions from './intentions';\nimport type { Linter, LinterMessage, MessagesPatch } from './types';\nimport Editors from './editors';\nimport TreeView from './tree-view';\nexport default class LinterUI {\n  name: string = 'Linter';\n  panel?: Panel;\n  signal: BusySignal = new BusySignal();\n  editors: Editors | null | undefined;\n  treeview?: TreeView;\n  commands: Commands = new Commands();\n  messages: Array<LinterMessage> = [];\n  statusBar: StatusBar = new StatusBar();\n  intentions: Intentions = new Intentions();\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  idleCallbacks: Set<number> = new Set();\n\n  constructor() {\n    this.subscriptions.add(this.signal, this.commands, this.statusBar);\n    const obsShowPanelCB = window.requestIdleCallback(\n    /* observeShowPanel */\n    async () => {\n      this.idleCallbacks.delete(obsShowPanelCB);\n      this.panel = new Panel();\n      await this.panel.update(this.messages);\n    });\n    this.idleCallbacks.add(obsShowPanelCB);\n    const obsShowDecorationsCB = window.requestIdleCallback(\n    /* observeShowDecorations */\n    () => {\n      this.idleCallbacks.delete(obsShowDecorationsCB);\n      this.subscriptions.add(atom.config.observe('linter-ui-default.showDecorations', (showDecorations: boolean) => {\n        if (showDecorations && !this.editors) {\n          this.editors = new Editors();\n          this.editors.update({\n            added: this.messages,\n            removed: [],\n            messages: this.messages\n          });\n        } else if (!showDecorations && this.editors) {\n          this.editors.dispose();\n          this.editors = null;\n        }\n      }));\n    });\n    this.idleCallbacks.add(obsShowDecorationsCB);\n  }\n\n  async render(difference: MessagesPatch) {\n    const editors = this.editors;\n    this.messages = difference.messages;\n\n    if (editors) {\n      if (editors.isFirstRender()) {\n        editors.update({\n          added: difference.messages,\n          removed: [],\n          messages: difference.messages\n        });\n      } else {\n        editors.update(difference);\n      }\n    } // Initialize the TreeView subscription if necessary\n\n\n    if (!this.treeview) {\n      this.treeview = new TreeView();\n      this.subscriptions.add(this.treeview);\n    }\n\n    this.treeview.update(difference.messages);\n\n    if (this.panel) {\n      await this.panel.update(difference.messages);\n    }\n\n    this.commands.update(difference.messages);\n    this.intentions.update(difference.messages);\n    this.statusBar.update(difference.messages);\n  }\n\n  didBeginLinting(linter: Linter, filePath: string) {\n    this.signal.didBeginLinting(linter, filePath);\n  }\n\n  didFinishLinting(linter: Linter, filePath: string) {\n    this.signal.didFinishLinting(linter, filePath);\n  }\n\n  dispose() {\n    this.idleCallbacks.forEach(callbackID => window.cancelIdleCallback(callbackID));\n    this.idleCallbacks.clear();\n    this.subscriptions.dispose();\n\n    if (this.panel) {\n      this.panel.dispose();\n    }\n\n    if (this.editors) {\n      this.editors.dispose();\n    }\n  }\n\n}"],"names":["$range","message","location","position","$file","file","getPathOfMessage","atom","project","relativizePath","getActiveTextEditor","paneItem","workspace","getCenter","getActivePaneItem","paneIsTextEditor","isTextEditor","lastPaneItem","getURI","isAlive","filterMessages","messages","filePath","severity","filtered","forEach","push","filterMessagesByRangeOrPoint","rangeOrPoint","expectedRange","constructor","name","Range","fromObject","range","intersectsWith","openFile","options","searchAllPanes","initialLine","row","initialColumn","column","open","visitMessage","reference","messageFile","messagePosition","console","warn","messageRange","start","openExternally","version","undefined","url","shell","openExternal","sortMessages","rows","sortDirection","sortDirectionID","multiplyWith","sort","a","b","severityA","severityScore","severityB","sortValue","localeCompare","fileA","fileALength","length","fileB","fileBLength","rangeA","rangeB","sortSolutions","solutions","priority","applySolution","textEditor","solution","apply","replaceWith","currentText","textInRange","getTextInBufferRange","setTextInBufferRange","get","map","key","calculate","cachedValue","calculatedValue","set","$839611dd9a7bf80c$var$setHydrateContext","context","$839611dd9a7bf80c$export$f07a6cef19e11b4c","$839611dd9a7bf80c$export$ac5ee418fd4e0f60","fn","detachedOwner","$839611dd9a7bf80c$var$Owner","listener","$839611dd9a7bf80c$var$Listener","owner","root","$839611dd9a7bf80c$var$UNOWNED","owned","cleanups","attached","result","$839611dd9a7bf80c$var$runUpdates","$839611dd9a7bf80c$var$cleanNode","$839611dd9a7bf80c$export$248155459a28d1fc","value","areEqual","s","observers","observerSlots","pending","$839611dd9a7bf80c$var$NOTPENDING","comparator","$839611dd9a7bf80c$export$5ca47aaad2fbf622","$839611dd9a7bf80c$var$readSignal","bind","$839611dd9a7bf80c$var$writeSignal","$839611dd9a7bf80c$export$494c6b131fbef4be","$839611dd9a7bf80c$var$updateComputation","$839611dd9a7bf80c$var$createComputation","$839611dd9a7bf80c$export$c583671cbbdb1ca1","$839611dd9a7bf80c$var$runEffects","$839611dd9a7bf80c$var$runUserEffects","c","user","$839611dd9a7bf80c$var$Effects","$839611dd9a7bf80c$export$59ca756e7a8aea0e","state","$839611dd9a7bf80c$export$410f60d5e45e709","$839611dd9a7bf80c$var$Pending","q","i","data","call","$839611dd9a7bf80c$export$e047e338db8faf8c","$839611dd9a7bf80c$export$c9908675c437f062","this","sources","updates","$839611dd9a7bf80c$var$Updates","$839611dd9a7bf80c$var$lookDownstream","sSlot","sourceSlots","$839611dd9a7bf80c$var$Transition","running","has","tValue","isComp","add","o","disposed","$839611dd9a7bf80c$var$markUpstream","pure","Error","node","time","$839611dd9a7bf80c$var$ExecCount","$839611dd9a7bf80c$var$runComputation","nextValue","err","$839611dd9a7bf80c$var$handleError","updatedAt","init","tOwned","$839611dd9a7bf80c$var$runTop","top","suspense","inFallback","effects","runningTransition","wait","$839611dd9a7bf80c$var$runQueue","cbs","promises","size","$839611dd9a7bf80c$var$setTransPending","cb","v","len","$839611dd9a7bf80c$var$completeUpdates","queue","userLength","e","resume","source","pop","index","obs","n","$839611dd9a7bf80c$var$reset","fns","$839611dd9a7bf80c$var$ERROR","$839611dd9a7bf80c$var$lookup","f","$839611dd9a7bf80c$export$ff2d44480da105c7","Comp","props","id","count","r","$839611dd9a7bf80c$export$f5235b51f4f3e06","list","mapFn","items","mapped","disposers","indexes","ctx","mapper","disposer","j","newItems","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","end","newEnd","item","newLen","fallback","$839611dd9a7bf80c$var$FALLBACK","Array","Math","min","Map","slice","$839611dd9a7bf80c$export$eaeb808a925192ab","each","children","[object Object]","$839611dd9a7bf80c$export$7e22de6427aba374","strictEqual","condition","when","child","$73d2f4acd52fe58a$var$reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","insertBefore","removeChild","t","sequence","replaceChild","$73d2f4acd52fe58a$export$792a797b69be0d58","code","element","dispose","$73d2f4acd52fe58a$export$ad79fd18084743b4","firstChild","textContent","$73d2f4acd52fe58a$export$c32ae21812be6bdb","html","check","isSVG","document","createElement","innerHTML","split","content","$73d2f4acd52fe58a$export$17a8087eb00e42f7","eventNames","$73d2f4acd52fe58a$var$$$EVENTS","Set","l","addEventListener","$73d2f4acd52fe58a$var$eventHandler","$73d2f4acd52fe58a$export$c8cd4918fc6460d5","removeAttribute","setAttribute","$73d2f4acd52fe58a$export$147b053ed05e69e8","handler","delegate","isArray","parent","accessor","marker","initial","$73d2f4acd52fe58a$var$insertExpression","current","type","composedPath","target","Object","defineProperty","configurable","cancelBubble","host","Node","unwrapArray","multi","nodeType","createTextNode","$73d2f4acd52fe58a$var$cleanChildren","array","$73d2f4acd52fe58a$var$normalizeIncomingArray","$73d2f4acd52fe58a$var$appendNodes","appendChild","normalized","unwrap","dynamic","replacement","inserted","el","isParent","$0a281cb1da6babf3$export$cbb2ce71cc733b5d","D","defaultSortDirection","R","C","S","p","rowSorter","$0a281cb1da6babf3$var$_","headerRenderer","x","$0a281cb1da6babf3$var$$","bodyRenderer","O","$0a281cb1da6babf3$var$w","getRowID","A","$0a281cb1da6babf3$var$k","accessors","I","columns","o1","keys","r1","t1","representitiveRowNumber","$0a281cb1da6babf3$var$v","cloneNode","c1","n1","sortable","$0a281cb1da6babf3$var$f","t2","t3","n2","e1","o2","shiftKey","className","$0a281cb1da6babf3$var$N","$0a281cb1da6babf3$var$g","$0a281cb1da6babf3$var$y","$0a281cb1da6babf3$var$m","String","r2","$0a281cb1da6babf3$var$b","$0a281cb1da6babf3$var$h","onClick","style","_v$","_v$2","prev","nodeStyle","cssText","removeProperty","setProperty","$73d2f4acd52fe58a$export$12da13d4956dfb58","$0a281cb1da6babf3$var$S","JSON","stringify","label","reverse","PanelComponent","getMessages","setMessages","createSignal","filteredMessages","onMount","onDidChangeMessages","panelRepresents","_el$","$8c855ba4badcb137$var$_tmpl$","width","excerpt","_el$2","$8c855ba4badcb137$var$_tmpl$2","severityNames","tagName","process","platform","metaKey","ctrlKey","getPaneContainer","paneContainer","paneContainerForItem","render","getElement","icon","classList","getDescription","setDescription","getShowDescription","setShowDescription","createEffect","async","description","log","marked","parcelRequire","default","renderMarkdown","response","error","onShouldUpdate","onShouldExpand","onShouldCollapse","$8695b732d08ffd7f$var$_tmpl$6","_el$6","_el$7","_el$8","$$click","thisOpenFile","_el$3","$8695b732d08ffd7f$var$_tmpl$","_el$4","messageSolutions","canBeFixed","_el$5","$8695b732d08ffd7f$var$_tmpl$2","once","onFixClick","showProviderName","linterName","_el$9","$8695b732d08ffd7f$var$_tmpl$3","debounce","_el$10","$8695b732d08ffd7f$var$_tmpl$4","_el$11","$8695b732d08ffd7f$var$_tmpl$5","ev","HTMLElement","href","elementGiven","contains","HTMLAnchorElement","parentElement","findHref","protocol","hostname","query","parseInt","overlayFocusFix","editor","editorComponent","views","getView","getComponent","blurEditor","focusEditor","didFocus","didBlurHiddenInput","relatedTarget","copyListener","event","preventDefault","_document$getSelectio","_document$getSelectio2","text","getSelection","navigator","clipboard","writeText","TooltipElement","$7f8ac5dd24a631be$var$_tmpl$","$8695b732d08ffd7f$export$9099ad97b570f7c","threashold","getLineCount","handleDecoration","highlights","update","decoration","querySelector","warning","info","removeDecoration","remove","activate","config","packages","getLoadedPackage","metadata","callbackID","window","requestIdleCallback","idleCallbacks","delete","install","require","deactivate","cancelIdleCallback","clear","entry","instances","provideUI","instance","LinterUI","signalRegistry","signal","attach","provideIntentions","from","intentions","consumeSignal","signalService","consumeStatusBar","statusBarService","statusBarRegistry","statusBar","DOCK_ALLOWED_LOCATIONS","PanelDelegate","emitter","Emitter","subscriptions","CompositeDisposable","changeSubscription","observe","notInitial","observeActivePaneItem","oldRow","onDidChangeCursorPosition","newBufferPosition","Disposable","getFilteredMessages","activeEditor","getPath","activeLine","getCursors","getBufferRow","Infinity","emit","callback","on","$839611dd9a7bf80c$var$transPending","Symbol","defaultValue","$839611dd9a7bf80c$export$a4ff86cea5c8127e","PanelDock","panelHeight","alwaysTakeMinimumSpace","changed","doPanelResize","$8c855ba4badcb137$export$6dd1a7910f0af0bb","forConfigHeight","minimumHeight","paneContainerView","dockNamesElement","dockNamesRects","getClientRects","tableElement","panelRects","height","updateConfigHeight","heightSet","lastSetPaneHeight","getTitle","getDefaultLocation","getAllowedLocations","getPreferredHeight","paneForItem","destroyItem","Panel","panel","Delegate","deactivating","showPanelConfig","hidePanelWhenEmpty","showPanelStateMessages","refresh","onDidDestroyPane","pane","destroyedPane","getItems","includes","onDidDestroyPaneItem","showPanel","activationTimer","firstTime","dock","getBottomDock","onDidChangeActivePaneItem","getPanelLocation","onDidChangeVisible","visible","activatePane","activateItem","newMessages","isActivePanel","hide","show","Commands","commands","move","applyAllSolutions","selection","write","invariant","forward","globally","currentEditor","currentFile","NaN","expectedValue","currentPosition","getCursorBufferPosition","found","currentFileEncountered","compare","Element","itemErrors","Helpers","itemWarnings","itemInfos","tooltips","title","onclick","setVisibility","prefix","visibility","countErrors","countWarnings","countInfos","childNodes","onDidClick","StatusBar","statusBarRepresents","statusBarClickBehavior","showStatusBar","workspaceView","dispatch","postfix","currentTextEditor","currentPath","statusBarPosition","destroy","BusySignal","executing","providerTitles","useBusySignal","registry","provider","create","fileMap","currentTitles","linter","names","path","getExecuting","didBeginLinting","didFinishLinting","Intentions","getIntentions","bufferPosition","hasArrayFixes","containsPoint","concat","selected","grammarScopes","$d35f7ba59509e92f$exports","$ee5eb5ffe2066e25$var$freeSelf","self","$ee5eb5ffe2066e25$var$root","$parcel$global","Function","$4a588165c108b0ee$exports","$ee5eb5ffe2066e25$exports","Date","now","$6672fcb019fddbda$var$reWhitespace","$6672fcb019fddbda$exports","string","test","charAt","$7c6e8d7c0ef90992$exports","replace","$c4f8cec14b068a94$var$objectProto","prototype","$c4f8cec14b068a94$var$hasOwnProperty","hasOwnProperty","$c4f8cec14b068a94$var$nativeObjectToString","toString","$c4f8cec14b068a94$var$symToStringTag","$a60f9bb92a356384$exports","toStringTag","$c4f8cec14b068a94$exports","isOwn","tag","unmasked","$3c96683a934ad758$var$nativeObjectToString","$3c96683a934ad758$exports","$94770429518ae35c$var$symToStringTag","$94770429518ae35c$exports","$080256361f5270d5$exports","$054b2e5379226559$exports","$ac9ecb17a4b05c51$var$reIsBadHex","$ac9ecb17a4b05c51$var$reIsBinary","$ac9ecb17a4b05c51$var$reIsOctal","$ac9ecb17a4b05c51$var$freeParseInt","$ac9ecb17a4b05c51$exports","other","valueOf","isBinary","$9e116a314e7b9533$var$nativeMax","max","$9e116a314e7b9533$var$nativeMin","$9e116a314e7b9533$exports","func","invokeFunc","args","lastArgs","thisArg","lastThis","lastInvokeTime","leadingEdge","timerId","setTimeout","timerExpired","leading","shouldInvoke","timeSinceLastCall","lastCallTime","maxing","maxWait","trailingEdge","timeWaiting","remainingWait","trailing","debounced","isInvoking","arguments","clearTimeout","TypeError","cancel","flush","TooltipDelegate","expanded","shouldUpdate","originalEvent","isTrusted","body","eventListener","removeEventListener","passive","$9c37d83cbf0fd6c1$exports","$6366aaffb221bc5b$exports","remainder","$c4076e98187b0ce5$exports","$f6b53667d558680c$exports","module","exports","Promise","resolve","then","overlayElement","focusFix","userSelect","Tooltip","markBufferRange","onDidDestroy","makeOverlaySelectable","decorateMarker","$7f8ac5dd24a631be$var$TooltipElement","hight","getBoundingClientRect","lineHight","getLineHeightInPixels","getFirstVisibleScreenRow","overlay","transform","dataTip","clientHeight","isValid","Editor","gutter","tooltip","markers","showTooltip","cursorPosition","tooltipFollows","ignoreTooltipInvocation","currentLineMarker","lastCursorPositions","WeakMap","tooltipSubscription","showDecorations","updateGutter","gutterPosition","removeTooltip","listenForMouseMovement","listenForKeyboardMovement","cursor","lastBufferPosition","isEqual","getBuffer","onDidChangeText","getBufferPosition","listenForCurrentLine","observeCursors","handlePositionChange","ref","currentRange","linesRange","currentIsEmpty","isEmpty","lastRange","lastIsEmpty","markScreenRange","invalidate","class","cursorMarker","getMarker","onDidChange","newHeadScreenPosition","newTailScreenPosition","getScreenRange","editorElement","disposableEvent","givenElement","selector","matches","nodeName","hasParent","tooltipElement","screenPosition","pixelPosition","pixelPositionForMouseEvent","expectedPixelPosition","pixelPositionForScreenPosition","differenceTop","differenceLeft","left","editorLineHeight","offsetHeight","offsetWidth","mouseEventNearPosition","getStartScreenPosition","screenPositionForPixelPosition","Number","isNaN","bufferPositionForScreenPosition","getBufferPositionFromMouseEvent","updateTooltip","removeGutter","addGutter","_","tooltipMarker","saveMarker","applyChanges","added","removed","textBuffer","destroyMarker","markerRange","markRange","oldHeadPosition","newHeadPosition","previousEventState","paint","allMarkers","largeness","lineCount","$187677c7139ef4d2$var$lineCountIfLarge","largeLineCount","longLine","$187677c7139ef4d2$var$lineLengthIfLong","longLineLength","Editors","editors","firstRender","observeTextEditors","notif","notifications","addWarning","detail","dismissable","buttons","getEditor","dismiss","querySelectorAll","scrollIntoView","isFirstRender","editorsMap","filePaths","getEditorsMap","onDidChangePath","onDidChangeGrammar","TreeView","decorations","decorateOnTreeView","givenMessages","applyDecorations","toReturn","projectPaths","getPaths","matchingProjectPath","find","startsWith","projectPath","chunks","Path","sep","join","getChunks","getChunksByProjects","chunk","change","mergeChange","calculateDecorations","treeViewElement","elementCache","appliedDecorations","getElementByPath","filePathsNew","CSS","escape","obsShowPanelCB","obsShowDecorationsCB","difference","treeview"],"version":3,"file":"index.js.map"}